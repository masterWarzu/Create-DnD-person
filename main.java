/* Программа, предположительно, производит генерирование персонажа для игры в D&D
 * по задумке, при вводе определённого числа, программа генерирует персонажа заданной расы и заданного класса.
 * 0.0 Предоставвляется выбор - автоматическое создание или ручное.
 * 0.1 Если автоматический, то программа должна сама создать персонажа случайной расы и случайного класса.
 * 0.2 Если ручной, то:
 * 0.2.1 Предоставляется выбор расы.+
 * 0.2.2 Предоставляется выбор пола персонажа.+
 * 0.2.3 Предоставляется выбор класса.+
 * 0.2.4 Генерируются значения характеристик в случайном порядке. В зависимости от выбранных значений.                */

import com.sun.deploy.security.SelectableSecurityManager;
import com.sun.xml.internal.ws.api.model.wsdl.WSDLOutput;

import javax.crypto.spec.PSource;
import java.util.*;
class Create_Unit //*********************-=-> создание Unit'a <-=-******************************************************
{
    Random rand = new Random();
    public String Unit_Race(int race_in)
    {
        String [] race_array = {"Дварф", "Эльф", "Полурослик", "Человек", "Дроконорожденный", "Гном", "Полуэльф",
                "Полуорк", "Тифлинг"};
        return race_array[race_in - 1];
    }
    public String Unit_Gender(int gender_in)
    {
        String [] gender_array = {"Мужской", "Женский"};
        return gender_array[gender_in - 1];
    }
    public String Unit_Class(int clas_in)
    {
        String [] class_array = {"Варвар","Бард","Жрец","Друид","Воин","Монах","Паладин","Следопыт","Плут","Чародей",
                "Колдун","Волшебник"};
        return class_array[clas_in - 1];
    }
    public String Military_Weapons ()
    {
        int weapon_1 = rand.nextInt(18);
        String [] military_weapon = {"Секира.","Алебарда.","Боевая кирка.","Боевой молот.","Боевой топор.","Глефа.",
                "Двуручный меч.","Длинное копьё.","Длинный меч.","Кнут.","Короткий меч.","Молот.","Моргенштерн.",
                "Пика.","Рапира.","Секира.","Скимитар.","Трезубец.","Цеп."};
        return military_weapon[weapon_1];
    }
    public String Simple_Weapons(String choice_array)
    {
        String out = "";
        if (choice_array == "full")
        {
            int weapon_2 = rand.nextInt(15);
            String [] simple_weapon = {"Два ручных топора.","Боевой посох.","Булава.","Дубинка.","Кинжал.","Копьё.",
                    "Лёгкий молот.","Метательное копьё.","Палица.","Ручной топор.","Серп.","Лёгкий арбалет.","Дротик.",
                    "Короткий лук.","Праща."};
            out =  simple_weapon[weapon_2];
        }
        if (choice_array == "melee")
        {
            int melee_weapon = rand.nextInt(7);
            String [] simple_weapon = {"Боевой посох.","Булава.","Дубинка.","Лёгкий молот.","Кинжал.","Палица.",
                    "Серп."};
            out = simple_weapon[melee_weapon];
        }
        if (choice_array == "ranged")
        {
            int ranged_weapon = rand.nextInt(8);
            String [] simple_weapon = {"Кинжал.","Копьё.","Метательное копьё.","Ручной топор.","Лёгкий арбалет.",
                    "Дротик.", "Короткий лук.","Праща."};
            out = simple_weapon[ranged_weapon];
        }
        return out;
    }
}
//------------------------------------------> ОПИСАНИЕ РАС ПЕРСОНАЖЕЙ <-------------------------------------------------
class Dwarf //++++++++++++++++++++++++++++=-> раса Дварф <-=++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
{
    static void Name_Person (String gender_in)//++++++++++++++++++++++=-> выбор имени в зависимости от пола <-=+++++++++
    {
        Random rand = new Random();
        if (gender_in == "Мужской")
        {
            int dwarf_male_size = 30;
            int dwarf_male_choice = rand.nextInt(dwarf_male_size);
            String [] Dwarf_Names_Male = {"Адрик","Альберих","Баренд","Баэрн","Броттор","Бруенор","Вондал","Вэйт",
                    "Гардаин","Даин","Даррак","Делг","Килдрак","Моргран","Орсик","Оскар","Рангрим","Рюрик","Талклин",
                    "Торадин","Тордек","Торин","Травок","Траубон","Ульфгар","Фаргрим","Флинт","Харбек","Эберк",
                    "Эйнкиль"};
            System.out.println ("\nИмя: " + Dwarf_Names_Male[dwarf_male_choice]);
        }
        else
        {
            int dwarf_female_array_size = 23;
            int dwarf_female_choice = rand.nextInt(dwarf_female_array_size);
            String [] Dwarf_Names_Female = {"Артин","Бардрин","Вистра","Гуннлода","Гурдис","Дагнал","Диеза","Илде",
                    "Катра","Кристид","Лифтраса","Мардред","Одхильд","Рисвин","Саннл","Тробера","Торгга","Фалкрунн",
                    "Финеллен","Хельджа","Хлин","Эльдет","Эмбер"};
            System.out.println ("\nИмя: " + Dwarf_Names_Female[dwarf_female_choice]);
        }
        int dwarf_clans_array_size = 15;
        String [] Clans = {"Балдерк","Боевой молот","Горунн","Данкил","Железный кулак","Крепкая наковальня",
                "Ледяная борода","Лодерр","Лютгер","Огненная кузня","Рамнахейм","Стракелн","Торунн","Унгарт",
                "Холдерхек"};
        int dwarf_clan_choice = rand.nextInt(dwarf_clans_array_size);
        System.out.println ("Клан: " + Clans[dwarf_clan_choice]);
    }
    static void Discription_Dwarf ()
    {
        String text_dwarf = "Описание: Полные древнего величия королевства и вырезанные в толще гор чертоги, удары ки" +
            "рок и молотков,  раздающиеся в глубоких шахтах и пылающий кузнечный горн, верность клану и традициям и п" +
            "ылающая ненависть к гоблинам и оркам - вот вещи, объединяющие всех дварфов. Смелые и выносливые дварфы и" +
            "звестны как опытные воины, шахтёры, каментёсы и металлурги. Хотя они и не превышают 152 сантиметров в вы" +
            "соту, дварфы настолько широкоплечие и плотные, что весят столько же, сколько превосходящий их в росте на" +
            " 60 сантиметров, человек. Их отвага и выносливость так же не уступает представителям более высоких народ" +
            "ов. Кожа у дварфов бывает от тёмно-коричневой до светлой, с красным оттенком. Наиболее распространённые " +
            "оттенки - светло-коричневый или смуглый, как разные виды земли. Их волосы, которые они носят длинными, н" +
            "о собранными в простые прически, обычно чёрного, серого или коричневого цвета, но у дварфов с бледной ко" +
            "жей часто встречаются рыжие волосы. Дварфы мужчины очень ценят свои бороды и тщательно за ними ухаживают" +
            ". Дварфы могут жить более 400 лет, и старейшие из них часто помнят этот мир сильно отличным от нынешнего" +
            ". Дварфы стойкие и выносливые. как горы, в которые они влюблены. Они уважают традиции своих кланов, прос" +
            "леживая их родословную до самого основания древнейших твердынь на рассвете молодого мира, и не отказываю" +
            "тся от этих традиций с легкостью. Частью этих традиций является преданность богам дварфов, которые поощр" +
            "яют присущие дварфам идеалы: прележный труд, сноровку в бою и любовь к кузнечному горну. Дварфам присущи" +
            " непреклонность и лояльность, верность своему слову, решительность в действиях, временами переходящее в " +
            "упрямство. У многих дварфов сильно развито чувство справедливости, и они медленно прощают причинённое им" +
            " зло. Зло причинённое дварфу, это зло, причинённное всему его клану. Таким образом, попытка отомстить од" +
            "ному дварфу может превратиться во вражду, захлестнувшую целый клан.\n";
        char [] discr = text_dwarf.toCharArray();
        for (int i = 0; i < discr.length; i++)
        {
            if ((i > 1) && (i % 160 == 0))
                System.out.print(discr[i] + "\n");
            else
                System.out.print(discr[i]);
        }
    }
}
class Elf //++++++++++++++++++++++++++++++=-> раса Эльф <-=+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
{
    static void Name_Person (String gender)
    {
        Random rand = new Random();
        if (gender == "Мужской")
        {
            int elf_male_size = 29;
            String [] Elf_Male_Names = {"Адран","Арамиль","Араннис","Ауст","Аэлар","Бейро","Берриан","Варис",
                    "Галинндан","Ивеллиос","Иммераль","Каррик","Куарион","Лаусиан","Мандартис","Паэлиас","Перен",
                    "Риардон","Ролен","Совелисс","Тамиорн","Таривол","Терен","Хадарай","Химо","Хэйян","Эниалис",
                    "Эрдан","Эреван"};
            int elf_male_choice = rand.nextInt(elf_male_size);
            System.out.println("\nИмя: " + Elf_Male_Names[elf_male_choice]);
        }
        else
        {
            int size = 30;
            String [] Names_female = {"Адрие","Альтеа","Анастрианна","Андрасте","Антинуа","Бетринна","Бирель","Вадания",
                    "Валанте","Джеленетт","Друсилиа","Йелениа","Каэлинн","Квеленна","Квиласи","Кейлет","Ксанафия",
                    "Лешанна","Лиа","Миали","Мэриэль","Найвара","Сариэль","Силакви","Теирастра","Тиа","Фелосиаль",
                    "Шава","Шанайра","Энна"};
            int choice = rand.nextInt(size);
            System.out.println("\nИмя: " + Names_female[choice]);
        }
        int size = 9;
        String [] Surnames = {"Амакиир (Сверкающий Цветок)","Амастасия (Звёздный Цветок)","Галанодель (Лунный Шёпот)",
                "Ильфелкиир (Сверкающий Бутон)","Ксилосент (Золотой Лепесток)","Лиадон (Серебрянный Лист)",
                "Найло (Ночной Бриз)","Сианодель (Лунный Ручей)","Холимион (Алмазная Роса)"};
        int choice = rand.nextInt(size);
        System.out.println("Фамилия: " + Surnames[choice]);
    }
    static void Discription_Elf ()
    {
        String text_elf = "Описание: Эльфы это волшебный народ, обладающий неземным изяществом, живущий в мире, но не" +
            " являющийся его частью. Они живут в местах, наполненных воздушной красотой, в глубинах древних лесов или" +
            " в серебрянных жилищах, увенчанных сверкающими шпилями и переливающихся волшебным светом. Там лёгкие дун" +
            "овения ветра разносят обрывки тихих мелодий и нежные ароматы. Эльфы любят природу и магию, музыку и поэз" +
            "ию, и всё прекрасное, что есть в мире. Обладая неземным изяществом и тонкими чертами, эльфы кажутся людя" +
            "м и представителям других рас черезчур красивыми. В среднем, они немного ниже людей, их рост колеблется " +
            "от 150 до 185 сантиметров. Они стройнее людей, и весят от 45 до 65 килограмм. Мужчины и женщины почти од" +
            "инакового роста, мужчины весят лишь незначительно больше. Цвета кожи у эльфов включают в себя все челове" +
            "ческие оттенки, а так же цвета с медным, бронзовым и голубовато-белым отливом. Волосы помимо человечески" +
            "х цветов могут быть зелёными или синими, а глаза приобретать цвет жидкого золота или серебра. У эльфов н" +
            "е растут волосы на лице, и почти отсутствуют волосы на теле. Они предпочитают элегантную одежду ярких цв" +
            "етов и простые, но красивые украшения. Эльфы способны жить более 700 лет, что даёт им более широкий взгл" +
            "яд на проблемы, беспокоящие короткоживущие расы. События чаще кажутся им забавными, чем волнующими, и им" +
            "и чаще движет любопытство, чем жадность. В случае мелких проишествий они чаще проявляют равнодушие и ост" +
            "аются в стороне. В случае же преследования цели, выполнения задания или изучения нового навыка эльфы ост" +
            "аются собранными и целеустремлёнными. Они не торопятся заводить друзей или врагов, а прощают еще медленн" +
            "ее. На мелкие оскорбления они отвечают пренебрежением, на крупные же - местью. Подобно молодым ветвям де" +
            "рева эльфы проявляют гибкость перед лицом опасности. Они верят в дипломатию и предпочитают с помощью ком" +
            "промисса уладить разногласие прежде чем оно перешло в насилие. Они способны отступить перед лицом вторже" +
            "ния вглубь своих лесов, уверенные, что просто смогут подождать, пока захватчики уйдут. Но если придёт ну" +
            "жда, эльфы способны проявить свою воинскую сторону, продемонстрировав владение мечом, луком и стратегией" +
            ".\n";
        char [] discr = text_elf.toCharArray();
        for (int i = 0; i < discr.length; i++)
        {
            if ((i > 1) && (i % 160 == 0))
                System.out.print(discr[i] + "\n");
            else
                System.out.print(discr[i]);
        }
    }
}
class Halfling //+++++++++++++++++++++++++=-> раса Полурослик <-=+++++++++++++++++++++++++++++++++++++++++++++++++++++++
{
    static void Name_Person(String gender)
    {
        Random rand = new Random();
        if (gender == "Мужской")
        {
            int size = 17;
            String [] Names_Male = {"Альтон","Андер","Гаррет","Кейд","Коррин","Лайл","Линдал","Майло","Меррик","Осборн",
                    "Перрин","Рид","Роско","Уэллби","Финнан","Элдон","Эррих"};
            int choice = rand.nextInt(size);
            System.out.println("\nИмя: " + Names_Male[choice]);
        }
        else
        {
            int size = 18;
            String [] Names_Female = {"Бри","Вани","Верна","Джиллиан","Китри","Кора","Кэлли","Лавиния","Лидда","Мерла",
                    "Паэла","Портия","Серафина","Трим","Шаэна","Эндри","Юфемия"};
            int choice = rand.nextInt(size);
            System.out.println("\nИмя: " + Names_Female[choice]);
        }
        int size = 10;
        String [] Surnames = {"Вверхтормашкин","Высокохолм","Галькоброс","Добробочка","Зеленофляг","Кустосбор",
                    "Лугодуг","Подветкин","Репейник","Чайнолист"};
        int choice = rand.nextInt(size);
        System.out.println("Фамилия: " + Surnames[choice]);
    }
    static void Discription_Halfling ()
    {
        String text_halfling = "Описание: Целью большинства полуросликов является домашний уют. Место, где можно посе" +
            "литься в покое и тишине, подальше от мародёрствующих чудовищ и сражающихся армий. Огонь очага, сытная пи" +
            "ща, добрая выпивка и добрая беседа. Хотя некоторые полурослики проживают свой век удалённых сельских общ" +
            "инах, другие сбиваются в постоянно кочующие общины, влекомые открытыми дорогами, широкими горизотами и в" +
            "озможностью открыть чудеса новых мест и новых людей. Но даже такие кочевники любят покой, вкусную еду, с" +
            "вой очаг и свой дом, даже если это повозка, трясущаяся по пыльной дороге или плот, плывущий по течению р" +
            "еки. Крошечные полурослики выживают в мире, полном более крупных существ, стараясь избегать внимания, а " +
            "если это оказывается невозможным, то избегая враждебности. Имея рост около 90 сантиметров, они кажутся о" +
            "тносительно безвредными, и благодаря этому успешно существуют столетиями, оставаясь в тени империй, войн" +
            " и политической борьбы. Они склонны к полноте, и весят от 18 до 20 килограмм. Кожа у полуросликов встреч" +
            "ается от смуглой до бледной, с румянцем. Волосы обычно коричневые или рыже-коричневые, вьющиеся. Глаза п" +
            "олуросликов карие или ореховые. Мужчины часто отпускают длинные бакенбарды, но бороды носят редко, а усы" +
            " и тем более. Они любят носить простую, удобную одежду, предпочитая яркие цвета. Практичность полурослик" +
            "ов распространяется не только на их одежду. Они довольствуются удовлетворением основных потребностей и п" +
            "ростых радостей, уделяя совсем мало внимания роскоши. Даже богатейшие их них предпочитают хранить своё д" +
            "обро в закрытых сундуках и подвалах, а не выставлять его на всеобщее обозрение. Полурослики умеют находи" +
            "ть простые решения своих проблем, являются весьма решительными.\n";
        char [] discr = text_halfling.toCharArray();
        for (int i = 0; i < discr.length; i++)
        {
            if ((i > 1) && (i % 160 == 0))
                System.out.print(discr[i] + "\n");
            else
                System.out.print(discr[i]);
        }
    }
}
class Human //++++++++++++++++++++++++++++=-> раса Человек <-=++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
{
    static void Name_Person(String gender)
    {
        Random rand = new Random();
        int size_ethnos = 9;
        String [] Ethnos = {"Дамарец","Иллусканец","Калишит","Мулан","Рашеми","Тетирец","Тёрами","Чондатанец","Шу"};
        int choice_ethnos = rand.nextInt(size_ethnos);
        System.out.println("\nЭтнос: " + Ethnos[choice_ethnos]);
        if (Ethnos[choice_ethnos] == "Дамарец")//++++++++++=-> этнос Дамарец <-=++++++++++++++++++++++++++++++++++++
        {
            if (gender == "Мужской")
            {
                int damar_male_size = 11;
                String [] Damar_Names_Male = {"Айвор","Бор","Глэр","Григор","Иган","Козеф","Миваль","Орел","Павел",
                        "Сергор","Фодель"};
                int damar_male_choice = rand.nextInt(damar_male_size);
                System.out.println("\nИмя: " + Damar_Names_Male[damar_male_choice]);
            }
            else
            {
                int damar_female_size = 8;
                String [] Damar_Names_Female = {"Алетра","Зора","Кара","Катернин","Мара","Натали","Ольма","Тана"};
                int damar_female_choice = rand.nextInt(damar_female_size);
                System.out.println("\nИмя: " + Damar_Names_Female[damar_female_choice]);
            }
            int damar_surnames_size = 8;
            String [] Damar_Surnames = {"Берск","Дотск","Куленов","Марск","Немецк","Стараг","Чернин","Шемов"};
            int damar_surnames_choice = rand.nextInt(damar_surnames_size);
            System.out.println("Фамилия: " + Damar_Surnames[damar_surnames_choice]);
        }
        if (Ethnos[choice_ethnos] == "Иллусканец")//++++++++++=-> этнос Иллусканец <-=++++++++++++++++++++++++++++++
        {
            if (gender == "Мужской")
            {
                int iluskan_male_size = 11;
                String [] Iluskan_Names_Male = {"Блас","Бран","Гет","Ландер","Лют","Малсер","Стор","Таман","Урт","Фрат",
                        "Эндер"};
                int iluskan_choice = rand.nextInt(iluskan_male_size);
                System.out.println("Имя: " + Iluskan_Names_Male[iluskan_choice]);
            }
            else
            {
                int iluskan_female_size = 8;
                String [] Iluskan_Names_Female  = {"Амафрея","Бетха","Вестра","Кетра","Мара","Ольга","Силифрей",
                        "Цефрея"};
                int iluskan_female_choice = rand.nextInt(iluskan_female_size);
                System.out.println("Имя: " + Iluskan_Names_Female[iluskan_female_choice]);
            }
            int iluskan_surnames_size = 6;
            String [] Iluskan_Surnames  = {"Брайтвуд","Виндривер","Лакмэн","Хелдер","Хорнрейвен","Штормвинд"};
            int iluskan_surnames_choice = rand.nextInt(iluskan_surnames_size);
            System.out.println("Фамилия: " + Iluskan_Surnames[iluskan_surnames_choice]);
        }
        if (Ethnos[choice_ethnos] =="Калишит")//++++++++++=-> этнос Калишит <-=+++++++++++++++++++++++++++++++++++++
        {
            if (gender == "Мужской")
            {
                int kalishit_male_size = 7;
                String [] Kalishit_Names_Male = {"Асеир","Бардеид","Зашеир","Кхемед","Мехмен","Судейман","Хасеид"};
                int kalishit_male_choice = rand.nextInt(kalishit_male_size);
                System.out.println("Имя: " + Kalishit_Names_Male[kalishit_male_choice]);
            }
            else
            {
                int kalishit_female_size = 8;
                String [] Kalishit_Names_Female = {"Атала","Джасмаль","Зашеида","Мейлиль","Сейдиль","Сейпора","Хама",
                        "Яшеира"};
                int kalishit_female_choice = (rand.nextInt(kalishit_female_size) + 1);
                System.out.println("Имя: " + Kalishit_Names_Female[kalishit_female_choice - 1]);
            }
            int kalishit_surnames_size = 7;
            String [] Kalishit_Surnames = {"Баша","Джассан","Думеин","Кхалид","Мостана","Пашар","Рейн"};
            int kalishit_surnames_choice = rand.nextInt(kalishit_surnames_size);
            System.out.println("Фамилия: " + Kalishit_Surnames[kalishit_surnames_choice]);
        }
        if (Ethnos[choice_ethnos] == "Мулан")//++++++++++=-> этнос Мулан <-=++++++++++++++++++++++++++++++++++++++++
        {
            if (gender == "Мужской")
            {
                int mulan_male_size = 9;
                String [] Mulan_Names_Male = {"Аот","Берерис","Кетот","Мумед","Рамас","Со-Кехур","Тхазар-Де","Урхур",
                        "Эхпут-Ки"};
                int mulan_male_choice = rand.nextInt(mulan_male_size);
                System.out.println("Имя: " + Mulan_Names_Male[mulan_male_choice]);
            }
            else
            {
                int mulan_female_size = 9;
                String [] Mulan_Names_Female = {"Аризима","Золис","Мурити","Нефис","Нулара","Сефрис","Тола","Умара",
                        "Чатхи"};
                int mulan_female_choice = rand.nextInt(mulan_female_size);
                System.out.println("Имя: " + Mulan_Names_Female[mulan_female_choice]);
            }
            int mulan_surnames_size = 7;
            String [] Mulan_Surnames = {"Анкхалаб","Анскульд","Натандем","Серпет","Уутракт","Фезим","Хахпет"};
            int mulan_surnames_choice = rand.nextInt(mulan_surnames_size);
            System.out.println("Фамилия: " + Mulan_Surnames[mulan_surnames_choice]);
        }
        if (Ethnos[choice_ethnos] == "Рашеми")//++++++++++=-> этнос Рашеми <-=++++++++++++++++++++++++++++++++++++++
        {
            if (gender == "Мужской")
            {
                int rashemi_male_size = 8;
                String [] Rashemi_Names_Male = {"Боривик","Владислак","Джандар","Канитар","Мадислак","Ральмевик",
                        "Фаургар","Шаумар"};
                int rashemi_male_choice = rand.nextInt(rashemi_male_size);
                System.out.println("Имя: " + Rashemi_Names_Male[rashemi_male_choice]);
            }
            else
            {
                int rashemi_female_size = 8;
                String [] Rashemi_Names_Female = {"Имзель","Иммит","Наварра","Таммит","Файварра","Хульмарра","Шеварра",
                        "Юльдра"};
                int rashemi_female_choice = rand.nextInt(rashemi_female_size);
                System.out.println("Имя: " + Rashemi_Names_Female[rashemi_female_choice]);
            }
            int rashemi_surnames_size = 6;
            String [] Rashemi_Surnames = {"Дайрнина","Илтазяра","Мурнитара","Стаянога","Улмокина","Чергоба"};
            int rashemi_surnames_choice = rand.nextInt(rashemi_surnames_size);
            System.out.println("Фамилия: " + Rashemi_Surnames[rashemi_surnames_choice]);
        }
        if ((Ethnos[choice_ethnos] == "Тетирец") || (Ethnos[choice_ethnos]) == "Чондатанец")//+=-> парный этнос
        {
            if (gender == "Мужской")
            {
                int couple_male_size = 10;
                String [] Couple_Names_Male = {"Горстаг","Грим","Дарвин","Дорн","Маларк","Морн","Рэндал","Стедд",
                        "Хельм","Эвендур"};
                int couple_male_choice = rand.nextInt(couple_male_size);
                System.out.println("Имя: " + Couple_Names_Male[couple_male_choice]);
            }
            else
            {
                int couple_female_size = 9;
                String [] Couple_Names_Female = {"Арвин","Джессаиль","Керри","Лурин","Мири","Рован","Тесселе","Шандри",
                        "Эсвель"};
                int couple_female_choice = rand.nextInt(couple_female_size);
                System.out.println("Имя: " + Couple_Names_Female[couple_female_choice]);
            }
            int couple_surnames_size = 6;
            String [] Couple_Surnames = {"Бакмэн","Грэйкасл","Дандрэгон","Толстаг","Эвенвуд","Эмблкроун"};
            int couple_choice = rand.nextInt(couple_surnames_size);
            System.out.println("Фамилия: " + Couple_Surnames[couple_choice]);
        }
        if (Ethnos[choice_ethnos] == "Тёрами")//++++++++++=-> этнос Тёрами <-=++++++++++++++++++++++++++++++++++++++
        {
            if (gender == "Мужской")
            {
                int terami_male_size = 8;
                String [] Terami_Names_Male = {"Антон","Диеро","Маркон","Пьерон","Римардо","Ромеро","Салазар","Умберо"};
                int terami_male_choice = rand.nextInt(terami_male_size);
                System.out.println("Имя: " + Terami_Names_Male[terami_male_choice]);
            }
            else
            {
                int terami_female_size = 9;
                String [] Terami_Names_Female = {"Балама","Вонда","Джалана","Дона","Куара","Луиза","Марта","Селизе",
                        "Фаила"};
                int tearmi_female_choice = rand.nextInt(terami_female_size);
                System.out.println("Имя: " + Terami_Names_Female[tearmi_female_choice]);
            }
            int terami_surnames_size = 8;
            String [] Terami_Surnames = {"Агосто","Асторио","Домине","Калабра","Маривальди","Писакар","Рамондо",
                    "Фалоне"};
            int terami_surnames_choice = rand.nextInt(terami_surnames_size);
            System.out.println("Фамилия: " + Terami_Surnames[terami_surnames_choice]);
        }
        if (Ethnos[choice_ethnos] == "Шу")//++++++++++=-> этнос Шу <-=++++++++++++++++++++++++++++++++++++++++++++++
        {
            if (gender == "Мужской")
            {
                int shu_male_size = 13;
                String [] Shu_Names_Male = {"Ан","Вэнь","Лонг","Лянь","Менг","Он","Фай","Цзюн","Цзянь","Чен","Чи",
                        "Шань","Шуй"};
                int shu_names_male_choice = rand.nextInt(shu_male_size);
                System.out.println("Имя: " + Shu_Names_Male[shu_names_male_choice]);
            }
            else
            {
                int shu_female_size = 8;
                String [] Shu_Names_Female = {"Бай","Ксяо","Лей","Мей","Тай","Цзя","Чао","Шуй"};
                int shu_names_female_choice = rand.nextInt(shu_female_size);
                System.out.println("Имя: " + Shu_Names_Female[shu_names_female_choice]);
            }
            int shu_surnames_size = 12;
            String [] Shu_Surnames = {"Вань","Као","Кунг","Лао","Линг","Мей","Пинь","Сум","Тань","Хуан","Чиень","Шин"};
            int shu_surnames_choice = rand.nextInt(shu_surnames_size);
            System.out.println("Фамилия: " + Shu_Surnames[shu_surnames_choice]);
        }
    }
    static void Discription_Human ()
    {
        String text_human = "Описание: В большинстве миров люди - это самая молодая из распространённых рас. Они позн" +
            "о вышли на мировую сцену и живут намного меньше, чем дварфы, эльфы и драконы. Возможно, именно краткость" +
            " их жизней заставляет их стремиться достигнуть как можно большего в отведённый им срок. А быть может, он" +
            "и хотят что-то доказать старшим расам, и поэтому создают могучие империи, основанные на завоеваниях и то" +
            "рговле. Что бы ни двигало ими, люди всегда были инноваторами и пионерами во всех мирах. Со своей склонно" +
            "стью к миграциям и завоеваниям, люди более разнообразны физичесмки, чем другие распространённые расы. Не" +
            " существует типичной внещности человека. рост отдельного представителя может составлять от 152 до 184 са" +
            "нтиметров, а вес - от 60 до 112 килограмм. Оттенок кожи у людей варьируется от почти чёрного до очень бл" +
            "едного, а волосы - от чёрного до светлого тонов (волнистые, кудрявые или прямые); мужчины могут носить в" +
            "олосы на лице, густые или редкие. Многие люди имеют примесь нечеловеческой крови, выдающей черты эльфа, " +
            "орка, или предков другого происхождения. Люди достигают совершеннолетия около двадцати лет, и редко прож" +
            "ивают одно столетие. Люди являются самым приспособленным и амбициозным народом среди распространённых ра" +
            "с. Их вкусы, нравы и обычаи сильно отличаются во множестве разных земель, где они поселились. Однако там" +
            ", где они селятся, они остаются надолго: строят города, стоящие веками, и великие королевства, сохраняющ" +
            "иеся множество столетий. У отдельного человека может быть относительно короткая продолжительность жизни," +
            " но человечская нация и культура сохраняет традиции от своих истоков на время, намного превышающее памят" +
            "ь одного человека. Они живут сегодняшним днём, что весьма хорошо подходит для приключенческой жизни, и п" +
            "озволяет вдобавок строить планы на будущее, со стремлением оставить после себя прочное наследие. Индивид" +
            "уально или в группах, люди легко приспосабливаются к ситуации, и всегда остаются внимательными к изменяю" +
            "щейся политической и социальной динамике.\n";
        char [] discr = text_human.toCharArray();
        for (int i = 0; i < discr.length; i++)
        {
            if ((i > 1) && (i % 160 == 0))
                System.out.print(discr[i] + "\n");
            else
                System.out.print(discr[i]);
        }
    }
}
class Dragonborn //+++++++++++++++++++++++=-> раса Драконорожденный <-=+++++++++++++++++++++++++++++++++++++++++++++++++
{
    static void Name_Person(String gender)
    {
        Random rand = new Random ();
        if (gender == "Мужской")
        {
            int dragonborn_male_size = 17;
            String [] Dragonborn_Names_Male = {"Арджхан","Баласар","Бхараш","Гхеш","Донаар","Крив","Медраш","Мехен",
                    "Надарр","Панджед","Патрин","Рхогар","Тархун","Торинн","Хескан","Шамаш","Шединн"};
            int dragonborn_male_choice = rand.nextInt(dragonborn_male_size);
            System.out.println("\nИмя: " + Dragonborn_Names_Male[dragonborn_male_choice]);
        }
        else
        {
            int dragonborn_female_size = 17;
            String [] Dragonborn_Names_Female = {"Акра","Бири","Даар","Джхери","Кава","Коринн","Мисханн","Нала","Перра",
                    "Райанн","Сора","Сурина","Тхава","Уаджит","Фаридэ","Хавилар","Харанн"};
            int dragonborn_female_choice = rand.nextInt(dragonborn_female_size);
            System.out.println("\nИмя: " + Dragonborn_Names_Female[dragonborn_female_choice]);
        }
        int dragonborn_clans_size = 18;
        String [] Dragonborn_Clans = {"Версисатургиеш","Даардендриан","Делмирев","Драчедандион","Кепешкмолик",
                "Керрилон","Кимбатуул","Клестинсиаллор","Линксакасендалор","Мястан","Неммонис","Нориксиус",
                "Офиншталажир","Прексижандилин","Турнурот","Фенкенкаьрадон","Шестенделиат","Яржерит"};
        int dragonborn_clans_choice = rand.nextInt(dragonborn_clans_size);
        System.out.println("Клан: " + Dragonborn_Clans[dragonborn_clans_choice]);
    }
    static void Discription_Dragonborn ()
    {
        String text_dragonborn = "Описание: Рождённые драконами, о чём говорит их название, драконорожденные идут гор" +
            "до подняв голову по миру, который встречает их со страхом и непониманием. Сформированные драконьими бога" +
            "ми или самими драконами, драконорожденные первоначально вылупились из драконьих яиц как новая раса, соче" +
            "тающая в себе лучшие качества драконов и гуманоидов. Некоторые драконорожденные являются верными слугами" +
            " истинных драконов, другие образуют ряды солдат в великих войнах, а некоторые ищут свою судьбу, не найдя" +
            " себе призвания. Драконорожденные выглядят как драконы, стоящие на задних лапах и принявшие гуманоидную " +
            "форму, потеряв при этом крылья и хвост. Первые из них обладали чешуёй оттенков, присущих драконам разных" +
            " видов, но поколения непрерывного скрещивания привели к появлению единого цвета. Их маленькие, аккуратны" +
            "е чешуйки обычно цвета меди или латуни, иногда с алым, золотым, медно-зелёным или рыжим оттенком. Они вы" +
            "соки и крепки, часто достигая двух метров в высоту и обладая весом свыше 130 килограмм. Их крпкие, четыр" +
            "ёхпалые конечности снабжены пальцами, не уступающими по прочности когтям. Кровь определённых видов драко" +
            "нов чрезвычайно сильна в представителях некоторых кланов. Эти драконорожденные часто гордятся тем, что ц" +
            "вет их чешуи близок к цвету их прародителей - ярко красный, зелёный, синий или белый, глянцево-чёрный ил" +
            "и блестяще-золотой, серебряный, латунный, медный или бронзовый. Для каждого драконорожденного его клан в" +
            "ажнее собственно жизни. Они ставят свою преданность и уважение клану выше всего, даже богов. Каждый пост" +
            "упок драконорожденного отражается на чести его клана, и тот кто опозорил свой клан, может быть изгнан. К" +
            "аждый драконорожденный знает своё место и свои обязанности в клане, и долг чести заставляет их придержив" +
            "аться этого места. Постоянное стремление к самосовершенствованию отражает самодостаточность всей расы др" +
            "аконорожденных в целом. Они ценят мастерство и совершенство во всём, к чему прикладывают усилия. Драконо" +
            "рожденные ненавидят проигрывать, и они приложат все возможные силы к достижению цели, прежде чем откажут" +
            "ся от неё. Они часто делают достижение мастерства в каком-либо навые целью своей жизни. Представители др" +
            "угих рас, разделяющие эти взгляды, могут легко завоевать уважение среди драконорожденных. Однако, несмот" +
            "ря на стремление к самодостаточности они понимают, что в трудной ситуации без помощи бывает не обойтись." +
            " Но лучший источник помощи это твой клан. А если помощь требуется всему клану, то они скорее обратятся к" +
            " другому клану драконорожденных, чем к представителям других рас, или даже помощи богов.\n";
        char [] discr = text_dragonborn.toCharArray();
        for (int i = 0; i < discr.length; i++)
        {
            if ((i > 1) && (i % 160 == 0))
                System.out.print(discr[i] + "\n");
            else
                System.out.print(discr[i]);
        }
    }
}
class Gnome //++++++++++++++++++++++++++++=-> раса Гном <-=+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
{
    static void Name_person(String gender)
    {
        Random rand = new Random();
        if (gender == "Мужской")
        {
            int gnome_male_size = 23;
            String [] Gnome_Names_Male = {"Алвин","Алстон","Боддинок","Брок","Бюргел","Варрин","Вренн","Гербо","Гимбл",
                    "Глим","Джебеддо","Димбл","Зук","Келлен","Намфудл","Оррин","Рундар","Сибо","Синдри","Фонкин","Фрюг",
                    "Элдон","Эрки"};
            int gnome_male_choice = rand.nextInt(gnome_male_size);
            System.out.println("\nИмя: " + Gnome_Names_Male[gnome_male_choice]);
        }
        else
        {
            int gnome_female_size = 22;
            String [] Gnome_Names_Female = {"Бимпноттин","Брина","Вейуокет","Донелла","Дувамил","Занна","Карамип",
                    "Карлин","Лилли","Лорилла","Лупмоттин","Маднаб","Никс","Нисса","Ода","Орла","Ройвин","Тана","Шамил",
                    "Эливик","Элиджобелл","Элла"};
            int gnome_female_choice = rand.nextInt(gnome_female_size);
            System.out.println("\nИмя: " + Gnome_Names_Female[gnome_female_choice]);
        }
        int gnome_clans_size = 11;
        String [] Gnome_Clans = {"Берен","Гаррик","Даергел","Мёрнинг","Накл","Нингел","Раулнор","Тимберс","Турен",
                "Фолькор","Шеппен"};
        int gnome_clans_choice = rand.nextInt(gnome_clans_size);
        System.out.println("Клан: " + Gnome_Clans[gnome_clans_choice]);
        int gnome_nicknames_size = 13;
        String [] Gnome_Nicknames = {"Барсук","Босоног","Двазамок","Колотушка","Ку","Ним","Пеплосерд","Пивохлёб","Плащ",
                "Пок","Самоцвет","Стамлдак","Фниппер"};
        int gnome_nicknames_choice = rand.nextInt(gnome_nicknames_size);
        System.out.println("Прозвище: " + Gnome_Nicknames[gnome_nicknames_choice]);
    }
    static void Discription_Gnome ()
    {
        String text_gnome = "Описание: Нескончаемый гул трудолюбия слышен там, где селятся сплочённые общества гномов" +
            ". Гул пронзают и звуки погромче: то тут, то там раздаётся скрежет шестерней, отголоски взрыва, возгласы " +
            "удивления или триумфа, и, особенно часто - звонкий смех. Гномы восторгаются жизнью, каждый миг наслаждая" +
            "сь новым изобретением, открытием, исследованием, созданием или шалостью. Гномы очень энергичны, и кажетс" +
            "я, что каждый сантиметр их крошечного тела излучает энтузиазм и жизнелюбие. В среднем гномы чуть выше 90" +
            " сантиметров, и вессят от 18 до 20 килограмм. Их смуглые или коричневые лица обычно украшены широкими ул" +
            "ыбками (над которыми нависают их выдающиеся носы), и их светлые глаза светятся возбуждением. Их русые во" +
            "лосы обычно торачт в разные стороны, словно выражая неослабевающий интерес ко всему на свете. Индивидуал" +
            "ьность гномов ярко выражается в их внешности. Гномы мужчины содержат свои бороды, в отличии от растрёпан" +
            "ных волос, аккуратно подстриженными, но часто расчёсывают их на несколько прядей, или придают забавную з" +
            "аострённую форму. Их одежда, обычно спокойных коричневых тонов, изящно украшена вышивкой, тиснением, или" +
            " расшита драгоценными камнями. По мнению гномов, жизнь - замечательная штука, и они готовы до капли осуш" +
            "ать такой источник наслаждения в течении трёх-пяти отмеренных им веков. Люди могут задаваться вопросом -" +
            " как не умереть со скуки за столь длинную жизнь, эльфы долгие годы могут смаковать красоту окружающего и" +
            "х мира, и, похоже, лишь гномов беспокоит, что даже за столь щедро отпущенный срок им не удаётся передела" +
            "ть и пересмотреть всё, что хочется. Разговаривают гному так, будто их мысле не успевают выбираться из их" +
            " голов. При этом даже когда они делятся идеями и мнениями на всевозможные темы, им удаётся внимательно в" +
            "ыслушать других, вставляя уместные возгласы удивления, и проявляя уважительные знаки внимания. Гномы дел" +
            "ают свои дома в холмистых, лесистых землях. Они живут под землёй, но больше любят свежий воздух, чем два" +
            "рфы, наслаждаясь живой природой поверхности всякий раз, когда могут. Их дома хорошо скрыты с помощью хит" +
            "роумных устройств и простых иллюзий. Желанные гости быстро оказываются в светлых тёплых норах. Те, кого " +
            "не ждут, вряд ли смогут эти норы даже отыскать. Гномы, поселившиеся в землях людей, как правило являются" +
            " огранщиками драгоценных камней, инженерами, мудрецами или жестянщиками. Некоторые человеческие семьи де" +
            "ржат гномов преподавателей, чтобы их воспитанники наслаждались сочетанием серьезного обучения и радостно" +
            "го удовольствия. Гном может обучать несколько поколений одной и той же семьи в течении своей долгой жизн" +
            "и. Хотя гномы любят шутки любого рода, особенно каламбуры и шалости, они также посвящают себя решению бо" +
            "лее серьёзных задач, которые они ставят перед собой. Многие гномы являются умелыми инженерами, алхимикам" +
            "и, жестянщиками и изобретателями. Они готовы к совершению ошибок и смеются над собой в процессе совершен" +
            "ствования своего дела, принимая смелые (иногда отчаянные) решения, и мечтая о большем.\n";
        char [] discr = text_gnome.toCharArray();
        for (int i = 0; i < discr.length; i++)
        {
            if ((i > 1) && (i % 160 == 0))
                System.out.print(discr[i] + "\n");
            else
                System.out.print(discr[i]);
        }
    }
}
class HalfElf //++++++++++++++++++++++++++=-> раса Полуэльф <-=+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
{
    // Данный класс использует имена класса "Человек" или имена класса "Эльф". В зависимости от работы Random.
    static void Discription_HalfElf ()
    {
        String text_halfelf = "Описание: Бродящие по двум мирам, но в действительности, не принадлежащие ни одному из" +
            " них. Полуэльфы сочетают в себе, как некоторые говорят, лучшие качества обеих рас: человеческие любознат" +
            "ельность, изобретательность и амбиции, приправленные изысканными чувствами, любовью к природе и ощущение" +
            "м прекрасного, свойственным эльфам. Некоторые полуэльфы живут среди людей, отгороженные эмоциональными и" +
            " фиическими различиями, наблюдая за старением друзей и возлюбленных, лишь слегка тронутые временем. Друг" +
            "ие живут с эльфами в неподвластных времени эльфийских королевствах. Они стремительно растут , и достигаю" +
            "т зрелости, пока их сверстники еще остаются детьми. Многие полуэльфы не способны ужиться ни в одном обще" +
            "стве, и выбирают жизнь оодиноких странников или объединяются с другими изгнанниками и неудачниками, чтоб" +
            "ы отправиться к приключениям. Для людей полуэльфы выглядят эльфами, а для эльфов они люди. Их рост приме" +
            "рно посередине между людьми и эльфами, и составляет от 155 до 183 сантиметров. Полуэльфы не такие стройн" +
            "ые, как эльфы, но и не такие широкоплечие как люди. Их вес колеблется между 45 и 80 килограммами, и мужч" +
            "ины лишь немного превосходят женщин в росте и весе. У мужчин полуэльфов на лицах растут волосы, и некото" +
            "рые отращивают бороды, чтобы скрыть своё эльфийское происхождение. Цвет волос и кожи у них примерно посе" +
            "редине между их людскими и эльфийскими родителями, и таким образом разнообразие даже выше, чем у исходны" +
            "х рас. Цвет глаз они обычно наследуют у эльфийских родителей. Полуэльфы не имеют собственных государств," +
            " но их радушно принимают в людских городах, и чуть менее радушно в эльфийских лесах. В крупных городах, " +
            "в регионах, где люди и эльфы живут рядом, численность полуэльфов иногда возрастает настолько, что они ор" +
            "ганизовывают свои собственные маленькие коммуны. Они рады обществу других полуэльфов, единственных сущес" +
            "тв, которые по настоящему понимают, каково это, жить меж двух миров. Впрочем, в большей части мира полуэ" +
            "льфы настолько редки, что могут годами не встречаться друг с другом. Некоторые полуэльфы предпочитают во" +
            "обще избегать компании, и живут на природе как охотники, лесники или искатели приключений, посещая цивил" +
            "изованные места лишь изредка. Как и эльфы, благодаря своему долголетию они движимы тягой к перемене мест" +
            " и нигде не остаются подолгу. Другие же наоборот, бросаются в гущу социальной жизни, используя свою хари" +
            "зму и социальные навыки на поприще дипломата или мошенника.\n";
        char [] discr = text_halfelf.toCharArray();
        for (int i = 0; i < discr.length; i++)
        {
            if ((i > 1) && (i % 160 == 0))
                System.out.print(discr[i] + "\n");
            else
                System.out.print(discr[i]);
        }
    }
}
class HalfOrk //++++++++++++++++++++++++++=-> раса Полуорк <-=++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
{
    static void Name_Person (String gender)
    {
        Random rand = new Random();
        if (gender == "Мужской")
        {
            int half_ork_male_size = 12;
            String [] HalfOrk_Names_Male = {"Гел","Денч","Имш","Кет","Краск","Муррен","Ронт","Токк","Фенг","Хенк",
                    "Холг","Шамп"};
            int half_ork_male_choice = rand.nextInt(half_ork_male_size);
            System.out.println("\nИмя: " + HalfOrk_Names_Male[half_ork_male_choice]);
        }
        else
        {
            int half_ork_female_size = 13;
            String [] HalfOrk_Names_Female = {"Багги","Вола","Волен","Евельда","Кансиф","Мев","Нига","Овак","Оунка",
                    "Сута","Шаута","Эмен","Энгонг"};
            int half_ork_female_choice = rand.nextInt(half_ork_female_size);
            System.out.println("\nИмя: " + HalfOrk_Names_Female[half_ork_female_choice]);
        }
    }
    static void Discription_HalfOrk()
    {
        String text_halfork = "Описание: Находясь ли под предводительством могучего колдуна, или стараясь установить " +
            "мир после многолетнего конфликта, орки и племена людей иногда заключали союзы, объединяя силы в огромные" +
            " орды, терроризирующие более цивилизованные государства по соседству. Когда такие союзы скреплялись узам" +
            "и брака, появлялись полуорки. Некоторые полуорки возвышались, становясь гордыми вождями племён. Их челов" +
            "ечья кровь давала им преимущество над их чистокровными соперниками. Другие отправлялись в мир, чтоб дока" +
            "зать своё превосходство над представителями более цивилизованных народов. Многие из них становились иска" +
            "телями приключений, достигая величия благодаря своим могучим свершениям, и дурной славы, благодаря варва" +
            "рским нравам и дикарской ярости. Серый цвет кожи, плоский лоб, выступающая челюсть, торчащие клыки и мог" +
            "учее телосложение не оставляет сомнений в орочьем происхождении для любого кто смотрит на полуорка. Рост" +
            " полуорков между 183 и 213 сантиметрами, а все обычно колеблется между 80 и 113 килограммами. Орки гордя" +
            "тся своими боевыми шрамами, а узоры, составленные из шрамов, украшают их тела. Другие шрамы отмечать быв" +
            "шего раба или изгнанника. Все полуорки, живущие с орками, или поблизости от них, имеют шрамы, следы униж" +
            "ений и поводы для гордости, отмечающие их победы и ранения. Живущие же среди людей полуорки могут как вы" +
            "ставлять свои шрамы на обозрение с гордостью, так и со стыдом прятать их. Одноглазый бог Груумш создал о" +
            "рков, и даже те орки, кто отвернулся от поклонения ему, не могут полностью избежать его влияния. То же с" +
            "амое можно сказать и про полуорков, хотя их челоеческая кровь снижает воздействие орочьего наследия. Нек" +
            "оторые полуорки слышат шёпот Груумша в своих снах, взывающий освободить ярость, что вскипает в них. Друг" +
            "ие чувствуют ликование Груумша когда они вступают в бой и либо ликуют вместе с ним, либо трясутся от стр" +
            "аха и ненависти. Полуорки по природе своей не являются злыми, но зло скрывается в них, принимают ли они " +
            "его или сопротивляются ему. В ярости Груумша полуорки чувствуют сильное возбуждение. Ярость не только ус" +
            "коряет их пульс, она заставляет их тела пылать. Колкие оскорбления действуют на них как яд, и печаль ист" +
            "ощает их силы. Но когда они смеются, то делают это громко и от души, и простые физические наслаждения - " +
            "пиры, выпивка, борьба, барабанный бой и дикие пляски - наполняют их сердца радостью. Они, как правило, в" +
            "спылчивы, иногда угрюмы, более склонны к действию, чем к созерцанию и к борьбе, чем к спору. Наиболее ку" +
            "льтурными полуорками являются те, у кого достаточно самоконтроля, чтобы проживать в цивилизованных земля" +
            "х.\n";
        char [] discr = text_halfork.toCharArray();
        for (int i = 0; i < discr.length; i++)
        {
            if ((i > 1) && (i % 160 == 0))
                System.out.print(discr[i] + "\n");
            else
                System.out.print(discr[i]);
        }
    }
}
class Tifling //++++++++++++++++++++++++++=-> раса Тифлинг <-=++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
{
    static void Name_Percon (String gender)
    {
        Random rand = new Random();
        if (gender == "Мужской")
        {
            int tifling_male_size = 14;
            String [] Tifling_Names_Male = {"Акменос","Амнон","Баракас","Дамакос","Йадос","Кайрос","Люцис","Мелех",
                    "Мордай","Мортос","Пелайос","Скамос","Терай","Экемон"};
            int tifling_male_choice = rand.nextInt(tifling_male_size);
            System.out.println("\nИнфернальное имя: " + Tifling_Names_Male[tifling_male_choice]);
        }
        else
        {
            int tifling_female_size = 13;
            String [] Tifling_Names_Female = {"Акта","Анакис","Брисеис","Дамая","Каллиста","Криелла","Лерисса",
                    "Макария","Немея","Орианна","Риета","Фелая","Эа"};
            int tifling_female_choice = rand.nextInt(tifling_female_size);
            System.out.println("\nИнфернальное имя: " + Tifling_Names_Female[tifling_female_choice]);
        }
        int necrotic_names_size = 21;
        String [] Necrotic_Names = {"Безрассудство","Вера","Идеал","Искусство","Музыка","Мука","Надежда","Напев",
                "Нигде","Открытость","Отчаяние","Падаль","Поиск","Почтение","Поэзия","Превосходство","Скорбь","Слава",
                "Случайность","Страх","Усталость"};
        int necrotic_names_choice = rand.nextInt(necrotic_names_size);
        System.out.println("'Идейное' имя: " + Necrotic_Names[necrotic_names_choice]);
    }
    static void Discription_Tifling()
    {
        String text_tifling = "Описание: Быть тифлингом - значит постоянно натыкаться на пристальные взгляди и перешё" +
            "птывания, терпеть страдания и оскорбления, видеть страх и недоверие в глазах кажждого встречного. Беда в" +
            " том, что тифлинги знают причину этого - договор, заключённый много поколений назад и позволивший Асмоде" +
            "ю - владыке Девяти Преисподних - внести вклад в их родословную. Такая внешность и природа - не их вина, " +
            "а последствие древнего прегрешения, расплачиваться за которое предстоит им, их детям, и детям их детей. " +
            "Тифлинги проищошли от людей, и по большому счёту всё еще выглядят как люди. Тем не менее, их дьявольское" +
            " наследие оставило заметный отпечаток на внешности. У тифлингов есть большие рога, принимающие различные" +
            " формы: у некоторых витые рога, как у барана, у других длинные и прямые, как у газели, у третьих спираль" +
            "ные, как у антилопы. Их толстый хвост, от 120 до 150 сантиметров длиной, вьётся между ног, похлёстывая и" +
            "х, когда тифлинг нервничает. Острые зубы превращают улыбку в звериный оскал, а их глаза сплошного цвета " +
            "без намёка на зрачок или белок, обычно чёрного, красного, белого, серебрянного или золотого цвета. Цвет " +
            "кожи тифлингов может принимать все тона, характерные для человека, а так же различные оттенки красного. " +
            "Их волосы, струящиеся из-за рогов, обычно тёмные, от чёрного или коричневого до тёмно-красного, синего и" +
            "ли фиолетового. Тифлинги живут небольшими общинами, в основном в людских городах, чаще всего в самых тру" +
            "щобах, где из них вырастают жулики, воры и короли преступного мира. Иногда они живут группами среди друг" +
            "их меньшинств, которые относятся к ним с чуть большим уважением. У тифлингов нет родины, и они знают, чт" +
            "о им надо найти свой путь в жизни, и что им понадобится сила для выживания. Они с опаской относятся ко в" +
            "сем, кто называется их другом, но когда кто-то проявляет доврие по отношению к ним, они стремятся отплат" +
            "ить той же монетой. Для того, кто заслужит верность тифлинга, он станет верным другом и надёжным союзник" +
            "ом до конца свой жизни.\n";
        char [] discr = text_tifling.toCharArray();
        for (int i = 0; i < discr.length; i ++)
        {
            if ((i > 1) && (i % 160 == 0))
                System.out.print(discr[i] + "\n");
            else
                System.out.print(discr[i]);
        }
    }
}
//------------------------------------------> ОПИСАНИЕ КЛАССОВ ПЕРСОНАЖЕЙ <---------------------------------------------
class Barbarian //++++++++++++++++++++++++=-> класс Варвар <-=++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
{
    static void class_Barbarian ()
    {
        String text_barbarian = "Описание: Жители посёлков и городов, настолько гордятся своей цивилизованностью, отл" +
            "ичающей их от животных, словно отрицание собственной природы подчёркивает их превосходство. Варвары же, " +
            "напротив, считают цивилизованность проявлением слабости. Связь между их животными инстинктами, первобытн" +
            "ой энергетикой и свирепой яростью очень сильна. Варвары чувствуют себя неуютно в окружении стен или в то" +
            "лпе, но раскрываются в родных диких просторах, в тундре, джунглях или степях, где их племена живут и охо" +
            "тятся. Лучше всего варвары проявляют себя посреди хаоса битвы. Они могут впасть в состояние берсерка, ут" +
            "ратив контроль над собственой яростью, и получая взамен нечеловеческую силу и стойкость. Варвар может ли" +
            "шь несколько раз воспользоваться резервами собственного гнева, прежде чем ему потребуется отдых, но обыч" +
            "но этих нескольких раз хватает, чтобы справится с любой угрозой, встреченной на пути. Не все члены племё" +
            "н, которых в цивилизованном обществе называют варварами, имеют класс <Варвар>. Настоящий варвар среди эт" +
            "их людей так же редок, как опытный воин в городе, и он исполняет схожую роль защиитника людей и военного" +
            " лидера. Жизнь в диких местах таит в себе опасность: соперничающие племена, смертельно опасная погода и " +
            "ужасные чудовища. И варвар бросается в борьбу с этими опасностями, защищая своих людей. Смелость перед л" +
            "ицом опасности делает варвара превосходным кандидатом в искатели приключений. Кочевой образ жизни часто " +
            "привычен для примитивных племён, и непоседливая жизнь авантюристов не составляет трудности для варвара. " +
            "Некоторые варвары скучают по сплочённому семейному укладу своих племён, но в конце концов находят замену" +
            " в узах, связывающих членов отряда.\n";
        char [] discr = text_barbarian.toCharArray();
        for (int i = 0; i < discr.length; i++)
        {
            if ((i > 1) && (i % 160 == 0))
                System.out.print (discr[i] + "\n");
            else
                System.out.print (discr[i]);
        }
    }
    static void Barbarian_Ability ()
    {
        System.out.println ("\nВладение:\nДоспехи: Лёгкие доспехи, средние доспехи, щиты.\nОружие: Простое оружие, " +
                "воинское оружие.\nИнструменты: Нет.\nСпасброски: Сила, Телосложение.");
        Random rand = new Random();
        int barbarian_skill_1 = rand.nextInt(6),
            barbarian_skill_2 = rand.nextInt(6),
            barbarian_flag = 1;
        while (barbarian_flag == 1)
        {
            if (barbarian_skill_2 == barbarian_skill_1)
            {
                barbarian_skill_2 = rand.nextInt(6);
                barbarian_flag = 1;
            }
            else
                barbarian_flag = 0;
        }
        String [] barbarian_skills = {"Атлетика","Внимательность","Выживание","Запугивание","Природа",
                "Уход за животными"};
        System.out.println("\nНавыки: " + barbarian_skills[barbarian_skill_1] + ", " +
                barbarian_skills[barbarian_skill_2] + ".");
        Create_Unit unit_barbarian = new Create_Unit();
        int barbarian_primary_weapon_choice = rand.nextInt(2),
            barbarian_secondary_weapon_choice = rand.nextInt(2);
        String [] barbarian_primary_weapon = {"Секира.", unit_barbarian.Military_Weapons()},
                  barbarian_secondary_weapon = {"Два ручных топора.", unit_barbarian.Simple_Weapons("full")};
        System.out.println("\nСнаряжение:\n1) " + barbarian_primary_weapon[barbarian_primary_weapon_choice] +
                "\n2) " + barbarian_secondary_weapon[barbarian_secondary_weapon_choice] + "\n3) Набор путешественника" +
                " и четыре метательных копья.");
        int hit_dice_barbarian = 12;
    }
}
class Bard //+++++++++++++++++++++++++++++=-> класс Бард <-=++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
{
    static void class_Bard ()
    {
        String text_bard = "Описание: В мирах D&D слова и музыка это не просто колебания воздуха, тут они содержат в " +
            "себе силу. И бард является мастером речей, песен, и волшебства, заложенного в них. Барды говорят, что вс" +
            "я мультивселенная была вызвана к существованию и сформирована словами, которые произнелси боги. И отраже" +
            "ния этих первородных Слов Творения до сих пор звучат в космосе. Музыка бардов это попытка уловить эти от" +
            "звуки и тонко вплести их в свои заклинания. Наиболее сильной чертой бардов является их исключительная ра" +
            "зносторонность. Многие барды предпочитают держаться не на передовой в бою, используя свою магию для вдох" +
            "новения союзников и препятствования противникам на расстоянии. Но барды способны защищать себя и в ближн" +
            "ем бою, при необходимости используя магию для укрепления своих клинков и доспехов. Их заклинания чаще пр" +
            "едназначены для очарования и создания иллюзий, а не для создания явных разрушений. Они обладают обширным" +
            "и знаниями во множестве тематик и естественные способности, которые позволяют им делать хорошо практичес" +
            "ки всё. Бардыы становятся мастерами в тех талантах, к которым стремятся их умы, оттачивая их до совершен" +
            "ства, от музыкальных выступлений до эзотерических знаний. Истинные барды не являются обыденной вещью в м" +
            "ире. Не каждый менестрель, поющий в таверне, или шут, скачущий при королевском дворе, является бардом. Ч" +
            "тобы обнаружить скрытую в музыке магию, требуется тяжёлое обучение и некоторая степень природного талант" +
            "а, чего большинству трубадуров и жонглёров не достаёт. Однако, определить разницу между этими исполнител" +
            "ями может быть трудно. Жизнь барда проходит в странствиях по землям и посвящена сбору знаний, повествова" +
            "нию историй, и существованию за счёт благодарности публики, как и у любого другого артиста. Но глубина з" +
            "наний, уровень музыкального мастерства и связь с магией ставит барда на другую ступень от их собратьев. " +
            "Барды редко селяться надолго в одном месте, и их естественная тяга к странствиям связана  с поиском новы" +
            "хсказаний, обучением новым наввкам и открытию новых горизонтов, что делает карьеру искаиеля приключений " +
            "для них естественным призванием. Каждое приключение - это возможность чему-то научиться, попрактиковать " +
            "разные навыки, проникнуть в давно заброшенные гробницы, обнаружить утраченные произведения магии, расшиф" +
            "оровать старые фолианты, пройтись по незнакомым местам, или столкнуться с экзотическими существами. Бард" +
            "ы любят сопровождать героев, чтобы засвидетельствовать их свершения из первых рук. Бард, который может р" +
            "ассказать впечатляющую историю из личного опыта, зарабаывает известность среди других бардов. Более того" +
            ", после повествования такого большого количества историй о великих свершениях героев, многие барды прини" +
            "мают их близко к сердцу и хотят принять роль героя сами.\n";
        char [] discr = text_bard.toCharArray();
        for (int i = 0; i < discr.length; i ++)
        {
            if ((i > 1) && (i % 160 == 0))
                System.out.print(discr[i] + "\n");
            else
                System.out.print(discr[i]);
        }
    }
    static void Bard_Ability()
    {
        System.out.println("\nВладение: \nДоспехи: Лёгкие доспехи.\nОружие: Простое оружие, длинные мечи, короткие " +
                "мечи, рапиры, ручные арбалеты.\nИнструменты: Три музыкальных инструмента на ваш выбор.\nСпасброски: " +
                "Ловкость, Харизма.");
        Random rand = new Random();
        int bard_skill_1 = rand.nextInt(16),
            bard_skill_2 = rand.nextInt(16),
            bard_skill_3 = rand.nextInt(16),
            bard_flag = 1;
        while (bard_flag == 1)
        {
            if ((bard_skill_1 == bard_skill_2) || (bard_skill_1 == bard_skill_3))
            {
                bard_skill_1 = rand.nextInt(16);
                bard_flag = 1;
            }
            else if (bard_skill_2 == bard_skill_3)
            {
                bard_skill_2 = rand.nextInt(16);
                bard_flag = 1;
            }
            else
                bard_flag = 0;
        }
        String [] bard_skills = {"Атлетика","Выносливость","Акробатика","Воровство","Скрытность","История","Религия",
                "Магия","Внимательность","Проницательность","Целительство","Подземелья","Природа","Запугивание",
                "Знание улиц","Обман","Переговоры"};
        System.out.println("\nНавыки: " + bard_skills[bard_skill_1] + ", " + bard_skills[bard_skill_2] + ", " +
                bard_skills[bard_skill_3] + ".");
        int bard_item_1_choice = rand.nextInt(2),
            bard_item_2_choice = rand.nextInt(2),
            bard_item_3_choice = rand.nextInt(3);
        Create_Unit unit_bard = new Create_Unit();
        String [] bard_item_1 = {"Набор дипломата.","Набор артиста."},
                  bard_item_2 = {"Лютня.","Любой музыкальный иструмент на выбор."},
                  bard_item_3 = {"Рапира.", "Длинный меч.", unit_bard.Simple_Weapons("full")};
        System.out.println("\nСнаряжение:\n1) " + bard_item_1[bard_item_1_choice] + "\n2) " +
                bard_item_2[bard_item_2_choice] + "\n3) " + bard_item_3[bard_item_3_choice] +
                "\n4) Кожанный доспех и кинжал.");
    }
    int hit_dice_bard = 8;
}
class Priest //+++++++++++++++++++++++++++=-> класс Жрец <-=++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
{
    static void class_Priest ()
    {
        String text_priest = "Описание: Божественная магия, как следует из названия, является силой богов, источающей" +
            "ся из них в мир. Жрецы являются проводниками этой энергии, проявляющейся в виде чудотворных эффектов. Бо" +
            "ги не дают такую власть всем, кто обращается к ним, но только тем. кто избран выполнять высокое призвани" +
            "е. Использующие божественную магию не полагаются на обучение или тренировки. Жрец может разучить шаблонн" +
            "ые молитвы и древние ритуалы, но способность читать заклинания зависит от преданности и интуитивного ощу" +
            "щения воли божества. Жрецы сочетают полезную магию исцеления и вдохновения союзников с заклинаниями, кот" +
            "орые вредят и препятствуют врагам. Они могут вызвать страх и ужас, наложить проклятье или болезни, отрав" +
            "ить, и даже призвать пламя с небес, чтобы уничтожить своих противников. Встретившись с грешниками, котор" +
            "ым поможет только удар булавой по голове, жрецы полагаются на свою боевую подготовку, что позволяет им в" +
            "ступить в ближний бой с силами богов на своей стороне. Не каждый послушник или священнослужитель в храме" +
            " или святилище является жрецом. Некоторые проповедники призваны к простой жизни служащего в храме, выпол" +
            "няя волю своих богов посредством молитвы и жертв, а не с помощью магии и оружия. В некоторых городах дух" +
            "овенство занимает политические должности, или рассматривается как трамплин для более высоких должностей," +
            " и вообще не общаются с богом. Истинные жрецы - редкость в большинстве иерархий. Если жрец обращается к " +
            "жизни искателя приключений, то, как правило, из-за того, что его бог требует этого. Преследуя цели богов" +
            ", часто попадаешь в опасные ситуации вне стен цивилизации, приходитсся карать зло и искать святые реликв" +
            "ии в древних гробницах. Многие жрецы также должны защищать последователей своих божеств, что может означ" +
            "ать сражение с неистовыми орками, ведение переговоров о мире между воюющими государствами, или закрытие " +
            "портала, через который в мир может пройти князь демонов. Большинство странствующих жрецов поддерживает н" +
            "екоторую связь с храмами и орденаами, разделяющими их веру. Храм может попросить помощи у жреца, а высши" +
            "й священник вправе просто потребовать её.\n";
        char [] discr = text_priest.toCharArray();
        for (int i = 0; i < discr.length; i++)
        {
            if ((i > 1) && (i % 160 == 0))
                System.out.print(discr[i] + "\n");
            else
                System.out.print(discr[i]);
        }
    }
    static void Priest_Ability()
    {
        System.out.println("\nВладение: \nДоспехи: Лёгкие доспехи, средние доспехи, щиты.\nОружие: Простое оружие.\n" +
                "Инструменты: Нет.\nСпасброски: Мудрость, Харизма.");
        Random rand = new Random();
        int priest_skill_1 = rand.nextInt(5),
            priest_skill_2 = rand.nextInt(5),
            priest_flag = 1;
        while (priest_flag == 1)
        {
            if (priest_skill_1 == priest_skill_2)
            {
                priest_skill_1 = rand.nextInt(5);
                priest_flag = 1;
            }
            else
                priest_flag = 0;
        }
        String [] priest_skills = {"История", "Медицина", "Проницательность", "Религия", "Убеждение"};
        System.out.println("\nНавыки: " + priest_skills[priest_skill_1] + ", " + priest_skills[priest_skill_2] + ".");
        int priest_item_1_choice = rand.nextInt(2),
            priest_item_2_choice = rand.nextInt(3),
            priest_item_3_choice = rand.nextInt(2);
        String [] priest_item_1 = {"Булава.", "Боевой молот (если владеете)."},
                  priest_item_2 = {"Чешуйчатый доспех.","Кожаный доспех.","Кольчуга (если владеете)."},
                  priest_item_3 = {"Набор священика.", "Набор путешественника."};
        System.out.println("\nСнаряжение: " + "\n1) " + priest_item_1[priest_item_1_choice] + "\n2) " +
                priest_item_2[priest_item_2_choice] + "\n3) " + priest_item_3[priest_item_3_choice]);
    }
    int hit_dice_priest = 8;
}
class Druid //++++++++++++++++++++++++++++=-> класс Друид <-=+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
{
    static void class_Druid ()
    {
        String text_druid = "Описание: Выше чего-либо другого друиды почитают природу. Имено она является источником " +
            "всех их заклинаний и магических способностей, непосредственно или через природное божество. Многие предп" +
            "очитают духовный путь конечного единения с природой, но есть и те, кто служит богам диких просторов, жив" +
            "отных или стихий. Длящиеся испокон веков обычаи друидов так же называют Старой Верой, противопоставляя и" +
            "х поклонению в храмах и у алтарей. Заклинания друидов воздействуют через животных и окружающую природу. " +
            "Это силы клыка и когтя, солнца и луны, огня и бури. Также друиды учатся принимать облик животных, и неко" +
            "торые настолько углубляются в это умение, что родному облику предпочитают звериный. Для друидов природа " +
            "представляет собой шаткое равновесие. Воздух, земля, огонь и вода - те четыре стихии, что составляют осн" +
            "ову мира - должны уравновешивать друг друга. Если она из стихий обретёт превосходство, сам мир может пре" +
            "кратить существование, притянутый стихийным измерением и разорванный на элементарные составляющие. Чтобы" +
            " не допустить этого, друиды противостоят сектам Стихийного Зла и всем, кто стремиться наделить любую из " +
            "стихий превосходящей силой. Так же друидов заботит тонкое экологиеское равновесие, необходимое флоре и ф" +
            "ауне, и готовность цивилизованных поселений жить в гармонии с природой, а не противопоставлять себя ей. " +
            "Жестокость природы - часть естественного порядка вещей, однако друиды не терпчт всё чужеродное, включая " +
            "аберрации (иллиды и бехолдеры) и нежить (зомби и вампиры). Иногдадруиды совершают вылазки на таких сущес" +
            "тв, особенно если те приближаются к их территориям. Священная земля и области нетронутой природы нередко" +
            " охраняются друидом. Впрочем, при достаточной угрозе естественному равновесию или подзащитной земле друи" +
            "д может перейти к активной борьбе с напастью, ступив на путь искателя приключений.\n";
        char [] discr = text_druid.toCharArray();
        for (int i = 0; i < discr.length; i ++)
        {
            if ((i > 1) && (i % 160 == 0))
                System.out.print(discr[i] + "\n");
            else
                System.out.print(discr[i]);
        }
    }
    static void Druid_Ability()
    {
        Random rand = new Random();
        System.out.println("\nВладение: \nДоспехи: Лёгкие доспехи, средние доспехи, щиты (друиды не носят доспехи и " +
                "щиты из металла).\nОружие: Боевые посохи, булавы, дрротики, дубинки, кинжалы, копья, метательные" +
                " копья, пращи, серпы, скимитары. \nИнструменты: Набор травника.\nСпасброски: Интеллект, Мудрость.");
        int druid_skill_1 = rand.nextInt(8),
            druid_skill_2 = rand.nextInt(8),
            druid_flag = 1;
        while (druid_flag == 1)
        {
            if (druid_skill_1 == druid_skill_2)
            {
                druid_skill_1 = rand.nextInt(8);
                druid_flag = 1;
            }
            else
                druid_flag = 0;
        }
        String [] druid_skills = {"Внимательность","Выживание","Магия","Медицина","Обращение с животными","Природа",
                "Проницательность","Религия"};
        System.out.println("\nНавыки: " + druid_skills[druid_skill_1] + ", " + druid_skills[druid_skill_2] + ".");
        Create_Unit unit_druid = new Create_Unit();
        int druid_item_1_choice = rand.nextInt(2),
            druid_item_2_choice = rand.nextInt(2);
        String [] druid_item_1 = {"Деревянный щит.", unit_druid.Simple_Weapons("full")},
                  druid_item_2 = {"Скимитар.", unit_druid.Simple_Weapons("melee")};
        System.out.println("\nСнаряжение: \n1) " + druid_item_1[druid_item_1_choice] + "\n2) "
                + druid_item_2[druid_item_2_choice] + "\n3) Кожаный доспех, набор путешественника и фокусировка " +
                "друидов.");
    }
    int hit_dice_druid = 8;
}
class Warrior //++++++++++++++++++++++++++=-> класс Воин <-=++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
{
    static void class_Warrior()
    {
        String text_warrior = "Описание: Воины владеют основами всех боевых стилей. Каждый воин может рубить топором," +
            " фехтовать рапирой, владеет длинным и двуручным мечом, может стрелять из лука и даже при некоторой сноро" +
            "вке способен поймать противника сетью. Помимо этого, воины хорошо знакомы с использованием щита и любых " +
            "доспехов. Помимо общих знаний, каждый воин специализируется на определённом стиле боя. Некоторые концент" +
            "рируются на стрельбе из лука, другие на сражение с оружием в каждой руке, а есть те, кто свои воинские с" +
            "пособности усиливает заклинаниями. Сочетание широких общих навыков и углублённой специализации делает во" +
            "инов непревзойдёнными на поле боя. Не все члены городской стражи, деревенского ополчения или королевской" +
            " армии являются воинами. Большинство из них это просто обученные солдаты, обладающие лишь основными воин" +
            "скими навыками. Солдаты-ветераны, офицеры, обученные телохранители, посвящённые рыцари и похожие персоны" +
            ", как правило, являются воинами. Некоторые воины чувствуют потребность использовать свою подготовку в ка" +
            "честве, искателей приключений. Исследование подземелий, убийство чудовищ и другая опасная работа, обыден" +
            "ная для искателей приключений, является второй натурой воина, и не так сильно отличчается от жизни, оста" +
            "вленной в прошлом. Риск здесь, возможно, и выше, но и награда значительно больше - например, воины в гор" +
            "одском дозоре вряд ли смогут найти меч - Язык Пламени.\n";
        char [] discr = text_warrior.toCharArray();
        for (int i = 0; i < discr.length; i ++)
        {
            if ((i > 1) && (i % 160 == 0))
                System.out.print(discr[i] + "\n");
            else
                System.out.print(discr[i]);
        }
    }
    static void Warrior_Ability()
    {
        Random rand = new Random();
        System.out.println("\nВладение: \nДоспехи: Все доспехи, щиты.\nОружие: Простое оружие, воинское оружие.\n" +
                "Интсрументы: Нет.\nСпасброски: Сила, Телосложение.");
        int warrior_skill_1 = rand.nextInt(8),
            warrior_skill_2 = rand.nextInt(8),
            warrior_flag = 1;
        while (warrior_flag == 1)
        {
            if (warrior_skill_1 == warrior_skill_2)
            {
                warrior_skill_1 = rand.nextInt(8);
                warrior_flag = 1;
            }
            else
                warrior_flag = 0;
        }
        String [] warrior_skills = {"Акробатика","Атлетика","Внимательность","Выживание","Запугивание","История",
                "Проницательность","Уход за животными"};
        System.out.println("\nНавыки: " + warrior_skills[warrior_skill_1] + ", " + warrior_skills[warrior_skill_2] +
                ".");
        Create_Unit unit_warrior = new Create_Unit();
        int warrior_item_1_choice = rand.nextInt(2),
            warrior_item_2_choice = rand.nextInt(2),
            warrior_item_3_choice = rand.nextInt(2),
            warrior_item_4_choice = rand.nextInt(2);
        String [] warrior_item_1 = {"Кольчуга.","Кожаный доспех, длинный лук и 20 стрел."},
                  warrior_item_2 = {unit_warrior.Military_Weapons() + "\n   Щит.",unit_warrior.Military_Weapons() +
                                    "\n   " + unit_warrior.Military_Weapons()},
                  warrior_item_3 = {"Лёгкий арбалет и 20 болтов.","2 ручных топора."},
                  warrior_item_4 = {"Набор исследователя подземелий","Набор путешественника."};
        System.out.println("\nСнаряжение: \n1) " + warrior_item_1[warrior_item_1_choice] + "\n2) " +
                warrior_item_2[warrior_item_2_choice] + "\n3) " + warrior_item_3[warrior_item_3_choice] + "\n4) " +
                warrior_item_4[warrior_item_4_choice]);
    }
    int hit_dice_warrior = 10;
}
class Monk //+++++++++++++++++++++++++++++=-> класс Монах <-=+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
{
    static void class_Monk()
    {
        String text_monk = "Описание: Монахи тщательно изучают магическую энергию, которая в большинстве монастырских" +
            " традиций именуется ЦИ. Эта энергия является составляяющей частью магии, пронизывающей мультивселенную, " +
            "а точнее, той её частью, которая протекает сквозь их тела, повышая физические возможности и нанося атаки" +
            ", способные препятствовать течению ЦИ в телах противников. Используя эту энергию, монахи удары своих гол" +
            "ых рук и ног неестественной силой и скоростью. С приборетаемым опытом их боевые тренировки и тренировки " +
            "владением ЦИ дают им всё больше власти над собственными телами и над телами врагов. Маленькие огороженны" +
            "е монастыри разбросаны по мирам D&D. Это крошечные убежища, позволяющие укрыться от потока повседневной " +
            "жизни, где само время, кажется замирает. Живущие тут монахи ищут путь к личному совершенству через созер" +
            "цание и утомительные тренировки. Многие попадают в монастырь детьми, отправленные туда, если родителям н" +
            "е хватало еды прокормить их, если родители умерли, или в знак благодарности за оказанную монахами помощь" +
            ". Некоторые монахи живут обосообленно от окружающих, оградившись от всего способного препятствовать их д" +
            "уховному росту. Другие дали обет изоляции, появляясь лишь в качестве шпионов или убийц, действуя по прик" +
            "азу своих лидеров, благородных покровителей или иных, смертных или божественных сил. Однако большинство " +
            "монахов не избегают своих соседей и часто посещают ближайшие городки и посёлки, обменивая свои услуги на" +
            " еду и другие товары. Будучи универсальными воителями, монахи нередко оказываются защитниками соседей от" +
            " чудовищ или захватчиков. Для монаха становление искателем приключений означает конец упорядоченной жизн" +
            "и в коммуне. Это может быть трудным шагом, и монахи принимают такое решение нелегко. Те же, кто покинул " +
            "свой монастырь, относятся к этому шагу очень серьёзно, воспринимая свои странствия как испытание своего " +
            "физического и духовного развития. Как правило, монахи мало заботятся о материальных богатствах, и ими дв" +
            "ижет желание достичь большего, чем просто убить чудовище и завладеть его сокровищами.\n";
        char [] discr = text_monk.toCharArray();
        for (int i = 0; i < discr.length; i ++)
        {
            if ((i > 1) && (i % 160 == 0))
                System.out.print(discr[i] + "\n");
            else
                System.out.print(discr[i]);
        }
    }
    static void Monk_Ability()
    {
        Random rand = new Random();
        System.out.println("\nВладение: \nДоспехи: Нет.\nОружие: Простое оружие, короткие мечи.\nИнструменты: " +
                "Выберите один вид инструмента ремесленников либо музыкального инструмента.\nСпасброски: Сила, " +
                "Ловкость.");
        int monk_skill_1 = rand.nextInt(6),
            monk_skill_2 = rand.nextInt(6),
            monk_flag = 1;
        while (monk_flag == 1)
        {
            if (monk_skill_1 == monk_skill_2)
            {
                monk_skill_1 = rand.nextInt(6);
                monk_flag = 1;
            }
            else
                monk_flag = 0;
        }
        String [] monk_skills = {"Акробатика","Атлетика","История","Проницательность","Религия","Скрытность"};
        System.out.println("\nНавыки: " + monk_skills[monk_skill_1] + ", " + monk_skills[monk_skill_2] + ".");
        Create_Unit unit_monk = new Create_Unit();
        int monk_item_1_choice = rand.nextInt(2),
            monk_item_2_choice = rand.nextInt(2);
        String [] monk_item_1 = {"короткий меч", unit_monk.Simple_Weapons("full")},
                  monk_item_2 = {"Набор исследователя подземелий","Набор путешественника"};
        System.out.println("\nСнаряжение: \n1) " + monk_item_1[monk_item_1_choice] + "\n2) " +
                monk_item_2[monk_item_2_choice] + "\n3) 10 дротиков.");
    }
    int hit_dice_monk = 8;
}
class Paladin //++++++++++++++++++++++++++=-> класс Паладин <-=+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
{
    static void class_Paladin()
    {
        String text_paladin = "Описание: Паладин клянётся защищать справедливость и праведность, отстаивать добродете" +
            "ли мира перед вторжениями тьмы, и охотиться на силы зла, где бы они не скрывались. Разные паладины сосре" +
            "дотачиваются на различных аспектах праведности, но все они связаны клятвой, которая даёт им силы для сов" +
            "ершения их священного дела. Многие паладины преданы богам добра, но сила паладина происходит скорее от с" +
            "обственного стремления к справедливости, чем от божества. Паладины тренируются годами, чтобы обучиться н" +
            "авыкам боя, осваивая владение различными видами оружия и доспехов. Тем не менее, их воинские навыки втор" +
            "ичны по сравнению с магической силой, которой они обладают: силой исцелять больных и раненых, карать неч" +
            "естивцев и нежить, защищать невинных и тех, кто присоединился к ним в борьбе за справедливоость. Жизнь п" +
            "аладина это жизнь искателя приключений. Пока тяжелые травмы не сделают их инвалидами, паладины проживают" +
            " жизнь на линии фронта мировой борьбы со злом. В рядах ополчений и армий мира мало представителей класса" +
            " воин, и еще меньшее количество простых людей могут претендовать на истинное звание паладина. Услышав зо" +
            "в, эти воины отсавляют прежнее ремесло и берут в руки оружие, чтобы бороться со злом. Иногда их клятвы п" +
            "риводят их на службу государям в качестве лидеров элитных групп рыцарей, но даже тогда их верность в пер" +
            "вую очередь отдана делу праведности, а не короне или стране. Ставшие искателями приключений паладины отн" +
            "осятся к своему делу серьёзно. Поход в древние руины или пыльный склеп может быть обусловлен поиском бол" +
            "ее высокой цели, чем поход за сокровищами. Зло таится в подземельях и дремучих лесах, и ддаже самые скро" +
            "мные победы над ним могут удержать мировое равновесие от небытия.\n";
        char [] discr = text_paladin.toCharArray();
        for (int i = 0; i < discr.length; i ++)
        {
            if ((i > 1) && (i % 160 == 0))
                System.out.print(discr[i] + "\n");
            else
                System.out.print(discr[i]);
        }
    }
    static void Paladin_Ability()
    {
        Random rand = new Random();
        System.out.println("\nВладение: \nДоспехи: Все виды доспехов, щиты.\nОружие: Простое оружие, воинское оружие." +
                "\nИнструменты: Нет.\nСпасброски: Мудрость, Харизма.");
        int paladin_skill_1 = rand.nextInt(6),
            paladin_skill_2 = rand.nextInt(6),
            paladin_flag = 1;
        while (paladin_flag == 1)
        {
            if (paladin_skill_1 == paladin_skill_2)
            {
                paladin_skill_1 = rand.nextInt(6);
                paladin_flag = 1;
            }
            else
                paladin_flag = 0;
        }
        String [] paladin_skills = {"Атлетика","Запугивание","Медицина","Проницательность","Религия","Убеждение"};
        System.out.println("\nНавыки: " + paladin_skills[paladin_skill_1] + ", " + paladin_skills[paladin_skill_2]
         + ".");
        int paladin_item_1_choice = rand.nextInt(2),
            paladin_item_2_choice = rand.nextInt(2),
            paladin_item_3_choice = rand.nextInt(2);
        Create_Unit unit_paladin = new Create_Unit();
        String [] paladin_item_1 = {unit_paladin.Military_Weapons() + "\n   Щит", unit_paladin.Military_Weapons() +
                                    "\n   " + unit_paladin.Military_Weapons()},
                  paladin_item_2 = {"Пять метательных копий.", unit_paladin.Simple_Weapons("melee")},
                  paladin_item_3 = {"Набор священика.","Набор путешественника."};
        System.out.println("\nСнаряжение: \n1) " + paladin_item_1[paladin_item_1_choice] + "\n2) " +
                paladin_item_2[paladin_item_2_choice] + "\n3) " + paladin_item_3[paladin_item_3_choice] +
                "\n4) Кольчуга и священный символ.");
    }
    int hit_dice_paladin = 10;
}
class Ranger //+++++++++++++++++++++++++++=-> класс Следопыт <-=++++++++++++++++++++++++++++++++++++++++++++++++++++++++
{
    static void class_Ranger()
    {
        String text_ranger = "Описание: Бойцы диких земель, следопыты, специализируются на охоте на монстров, таких к" +
            "ак неистовствующие звери, чудовищные создания, ужасающие великаны и смертоносные драконы, угрожающих нап" +
            "адением на цивилизованные земли гуманоидов. Они умеют выслеживать добычу подобно хищнику, скрытно передв" +
            "игаясь через дебри, прячась среди кустов и камней. Тренируясь сражаться, следопыты делают упор боевой по" +
            "дготовки н сражениях с избранными врагами. Благодаря близости с дикой природой, следопыты приобретают сп" +
            "особность творить заклинания, взывая к силам природы подобно друидам. Их заклинания, как и боевые навыки" +
            ", делают акцент на скорость, скрытность и охоту. Таланты и способности следопыта оттачиваются с концентр" +
            "ацией на защите пограничных земель. Хотя следопыт может заработать на жизнь как охотник или проводник, е" +
            "го истинным призванием является защита пограничных земель от разрушительных действий чудовищ и гуманоидн" +
            "ых орд, приходящих из диких земель. В некоторых местах следопыты собираются в тайные ордены или объединя" +
            "ют усилия с кругами друидов. Однако, многие следопыты независимы, так как знают, что если нападёт дракон" +
            " или отряд орков, они будут первой (и чаще всего последней) линией обороны. Эта яростная независимость д" +
            "елает следопытов пригодными для приключений, так как они привыкли жить вдали от комфорта сухой постели и" +
            " горячей ванны. Сталкиваясь с воспитанными в городе искателями приключений, которые ноют о тяготах жизни" +
            " в дикой природе, следопыты реагируют на это помесью веселья, разочарования и сочувствия. Но они понимаю" +
            "т, что другие искатели приключений, привносящую свою лепту в дело борьбы с врагами цивилизации, стоят до" +
            "полнительных усилий. Изнеженные горожане могут не знать,  как прокормить себя или найти преснуую воду в " +
            "дикой природе, но они компенсируют это незнание своими навыками.\n";
        char [] discr = text_ranger.toCharArray();
        for (int i = 0; i < discr.length; i ++)
            if ((i > 1) && (i % 160 == 0))
                System.out.print(discr[i] + "\n");
            else
                System.out.print(discr[i]);
    }
    static void Ranger_Ability()
    {
        Random rand = new Random();
        System.out.println("\nВладение:\nДоспехи: Лёгкие доспехи, средние доспехи, щиты.\nОружие: Простое оружие, " +
                "воинское оружие.\nИнструменты: Нет.\nСпасброски: Сила, Ловкость.");
        int ranger_skill_1 = rand.nextInt(8),
            ranger_skill_2 = rand.nextInt(8),
            ranger_skill_3 = rand.nextInt(8),
            ranger_flag = 1;
        while(ranger_flag == 1)
        {
            if ((ranger_skill_1 == ranger_skill_2) || (ranger_skill_1 == ranger_skill_3))
            {
                ranger_skill_1 = rand.nextInt(8);
                ranger_flag = 1;
            }
            else if (ranger_skill_2 == ranger_skill_3)
            {
                ranger_skill_2 = rand.nextInt(8);
                ranger_flag = 1;
            }
            else
                ranger_flag = 0;
        }
        String [] ranger_skills = {"Анализ","Атлетика","Внимательность","Выживание","Природа","Проницательность",
                "Скрытность","Уход за животными"};
        System.out.println("\nНавыки: " + ranger_skills[ranger_skill_1] + ", " + ranger_skills[ranger_skill_2] + ", "
        + ranger_skills[ranger_skill_3] + ".");
        int ranger_item_1_choice = rand.nextInt(2),
            ranger_item_2_choice = rand.nextInt(2),
            ranger_item_choice_3 = rand.nextInt(2);
        Create_Unit unit_ranger = new Create_Unit();
        String [] ranger_item_1 = {"Чешуйчатый доспех.","Кожаный доспех."},
                  ranger_item_2 = {"Два коротких меча.", unit_ranger.Simple_Weapons("melee") + "\n   " +
                                   unit_ranger.Simple_Weapons("melee")},
                  ranger_item_3 = {"Набор исследователя подземелий.","Набор путешественника."};
        System.out.println("\nСнаряжение: \n1) " + ranger_item_1[ranger_item_1_choice] + "\n2) " +
                ranger_item_2[ranger_item_2_choice] + "\n3) " + ranger_item_3[ranger_item_choice_3] +
                "\n4) Длинный лук и колчан с 20 стрелами.");
    }
    int hit_dice_ranger = 10;
}
class Rogue //++++++++++++++++++++++++++++=-> класс Плут <-=++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
{
    static void class_Rogue()
    {
        String text_rogue = "Описание: Плуты прилагают больше усилий для освоения различных навыков, а также совершен" +
            "ствуют свои боевые срособности, дающие им большой набор приёмов, каким мало какие персоонажи могут похва" +
            "статься. Многие плуты сосредотачиваются на скрытности и обмане, в то время как другие совершенствуют нав" +
            "ыки, помогающие им в подземельях, такие как лазание, поиск и обезвреживание ловушек, и вскрытие замков. " +
            "Когда дело доходит до боя, плуты отдают предпочтение хитрости, а не грубой силе. Плуту достаточно сделат" +
            "ь один точный удар туда, где нападение наиболее повредит цели, а не одолевать врага шквалом атак. Плуты " +
            "обладают почти сверхестественной ловкостью для избегания опасностей, а некоторые обучились магическим тр" +
            "юкам в дополнение к своим способностям. В каждом городе и посёлке есть своя доля плутов. Большинство из " +
            "них живёт согласно худшим стереотипам класса, зарабатывая на жизнь грабежами, убийствами, срезанием коше" +
            "льков и мошенничеством. Часто эти негодяи объединяются в гильдии воров или преступные кланы. Многие плут" +
            "ы действуую самостоятельно, но и они иногда берут учеников, помогающих в мошенничестве и грабеже. Некото" +
            "рые плуты живут честной жизнью слесарей, следователей и крысоловов, работа которых очень опасна из-за об" +
            "итающих в канализации лютых крыс и веркрыс. Плуты искатели приключений встречаются по обе стороны закона" +
            ". Часть из них - закоренелые престуупники, которые решили искать удачу и клады, а другая часть живёт жиз" +
            "нью искателей приключений, чтобы уйти от закона. Некоторые обрели и усовершенствовали свои навыки с цель" +
            "ю проникновения в древние руины и скрытые склепы в поисках сокровищ.\n";
        char [] discr = text_rogue.toCharArray();
        for (int i = 0; i < discr.length; i ++)
            if ((i > 1) && (i % 160 == 0))
                System.out.print(discr[i] + "\n");
            else
                System.out.print(discr[i]);
    }
    static void Rogue_Ability()
    {
        Random rand = new Random();
        System.out.println("\nВладение: \nДоспехи: Лёгкие доспехи.\nОружие: Простое оружие, ручные арбалеты, длинные " +
                "мечи, рапиры, короткие мечи.\nИнструменты: Воровские инструменты.\nСпасброски: Ловкость, Интеллект.");
        int rogue_skill_1 = rand.nextInt(11),
            rogue_skill_2 = rand.nextInt(11),
            rogue_skill_3 = rand.nextInt(11),
            rogue_skill_4 = rand.nextInt(11),
            rogue_flag = 1;
        while (rogue_flag == 1)
        {
            if ((rogue_skill_1 == rogue_skill_2) || (rogue_skill_1 == rogue_skill_3) ||
                    (rogue_skill_1 == rogue_skill_4))
            {
                rogue_skill_1 = rand.nextInt(11);
                rogue_flag = 1;
            }
            else if ((rogue_skill_2 == rogue_skill_3) || (rogue_skill_2 == rogue_skill_4))
            {
                rogue_skill_2 = rand.nextInt(11);
                rogue_flag = 1;
            }
            else if (rogue_skill_3 == rogue_skill_4)
            {
                rogue_skill_3 = rand.nextInt(11);
                rogue_flag = 1;
            }
            else
                rogue_flag = 0;
        }
        String [] rogue_skills = {"Акробатика","Анализ","Атлетика","Внимательность","Выступление","Запугивание",
                "Ловкость рук","Обман","Проницательность","Скрытность","Убеждение"};
        System.out.println("\nНавыки: " + rogue_skills[rogue_skill_1] + ", " + rogue_skills[rogue_skill_2] +
                ", " + rogue_skills[rogue_skill_3] + ", " + rogue_skills[rogue_skill_4] + ".");
        int rogue_item_1_choice = rand.nextInt(2),
            rogue_item_2_choice = rand.nextInt(2),
            rogue_item_3_choice = rand.nextInt(3);
        String [] rogue_item_1 = {"Рапира.","Короткий меч."},
                  rogue_item_2 = {"Короткий лук и колчан с 20 стрелами", "Короткий меч."},
                  rogue_item_3 = {"Набор взломщика.","Набор исследователя подземелий.","Набор путешественника."};
        System.out.println("\nСнаряжение: \n1) " + rogue_item_1[rogue_item_1_choice] + "\n2) " +
                rogue_item_2[rogue_item_2_choice] + "\n3) " + rogue_item_3[rogue_item_3_choice] +
                "\n4) Кожаная броня, два кинжала, воровские инструменты.");
    }
    int hit_dice_rogue = 8;
}
class Sorcerer //+++++++++++++++++++++++++=-> класс Чародей <-=+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
{
    static void class_Sorcerer()
    {
        String text_sorcerer = "Описание: Магия является частью каждого чародея, наполняя тело, разум и дух скрытой с" +
            "илой, которая ждёт, когда её используют. Некоторые чародеи владеют магией, которая проистекает из древне" +
            "й родословной, связанной с магией драконов. Другие же несут в себе сырую, неконтролируемую силу, хаотичн" +
            "ый шторм, который может выплеснуться самым неожиданным образом. Проявление сил чародея крайне непредсказ" +
            "уемо. Некоторые драконьи родословные получают ровно одного чародея в каждом покоолении, в других же родо" +
            "словных каждый индивид может являться чародеем. В большинстве случаев способность к чародейству возникае" +
            "т случайно. Некоторые чародеи не могут назвать источник своей силы, в то время как другие связывают его " +
            "со странными событиями в своей жизни. Прикосновение демона, благословление дриады при рождении, или вода" +
            " из мистического источника - всё это может разжечь искру чародейского дара. Это может быть дар божества " +
            "магии, воздействие стихийных сил из Внутренних Планов, прикосновение к безумному хаосу Лимбо или пониман" +
            "ие внутреннего устройства реальности. Чародеи не используют книги заклинаний, на которые полагаются волш" +
            "ебники, и, в отличие от колдунов, не полагаются на высокого покровителя, даровавшего им заклятья. Научив" +
            "шись использовать и направлять свою собственную врождённую магию, они могут открыть для себя новые ошело" +
            "мляющие способы высвобождения этой силы. Чародеи довольно редко встречаются в мире, и совсем уж необычно" +
            " встретить чародея, каким-либо образом вовлечённого в приключения. Люди с магическими силами, текущими п" +
            "о их жилам, вскоре обнаруживают, что данные силы не могут постоянно дремать. Чародейская магия требует и" +
            "спользования, и имеет тенденцию вырываться самым непредсказуемым образом, если её игнорировать. Зачастую" +
            ", у чародеев туманные мотивы, толкающие их на приключения. Некоторые ищут более глубокого понимания маги" +
            "ческих сил, влияющих на них, или разгадок их таинственного происхождения. Другие же надеются найти спосо" +
            "об избавления от своего дара, или раскрытия его полного потенциала. Вне зависимости от их целей, чародеи" +
            " столь же полезны в отряде искателей приключений, как и волшебники. Хотя чародеи и не владеют множеством" +
            " заклинаний, это с лихвой компенсируется большой гибкостью в использовании тех заклятий, что им известны" +
                ".\n";
        char [] discr = text_sorcerer.toCharArray();
        for (int i = 0; i < discr.length; i ++)
            if ((i > 1) && (i % 160 == 0))
                System.out.print(discr[i] + "\n");
            else
                System.out.print(discr[i]);
    }
    static void Sorcerer_Ability()
    {
        Random rand = new Random();
        System.out.println("\nВладение:\nДоспехи: Нет.\nОружие: Боевые посохи, дротики, кинжалы, лёгкие арбалеты, " +
                "пращи.\nИнтсрументы: Нет.\nСпасброски: Телосложение, Харизма.");
        int sorcerer_skill_1 = rand.nextInt(6),
            sorcerer_skill_2 = rand.nextInt(6),
            sorcerer_flag = 1;
        while (sorcerer_flag == 1)
        {
            if (sorcerer_skill_1 == sorcerer_skill_2)
            {
                sorcerer_skill_1 = rand.nextInt(6);
                sorcerer_flag = 1;
            }
            else
                sorcerer_flag = 0;
        }
        String [] sorcerer_skills = {"Запугивание","Магия","Обман","Проницательность","Религия","Убеждение"};
        System.out.println("\nНавыки: " + sorcerer_skills[sorcerer_skill_1] + ", " + sorcerer_skills[sorcerer_skill_2]
         + ".");
        Create_Unit unit_sorcerer = new Create_Unit();
        int sorcerer_item_1_choice = rand.nextInt(2),
            sorcerer_item_2_choice = rand.nextInt(2),
            sorcerer_item_3_choice = rand.nextInt(2);
        String [] sorcerer_item_1 = {"Лёгкий арбалет и 20 болтов", unit_sorcerer.Simple_Weapons("full")},
                  sorcerer_item_2 = {"Мешочек с компонентами.","Магическая фокусировка."},
                  sorcerer_item_3 = {"Набор исследователя подземелий.","Набор путешественника."};
        System.out.println("\nСнаряжение:\n1) " + sorcerer_item_1[sorcerer_item_1_choice] + "\n2) " +
                sorcerer_item_2[sorcerer_item_2_choice] + "\n3) " + sorcerer_item_3[sorcerer_item_3_choice] +
                "\n4) Два кинжала.");
    }
    int hit_dice_sorcerer = 6;
}
class Warlock //++++++++++++++++++++++++++=-> класс Колдун <-=++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
{
    static void class_Warlock()
    {
        String text_warlock = "Описание: Колдун заключает договор с потусторонней сущностью. Иногда отношения между к" +
            "олдуном и его покровителем схожи на отношения жреца и его божества, но сущности, выступающие в роли покр" +
            "овителей, вовсе не боги. Колдун может возглавить культ, посвящённый принцу демонов, архидьяволу или сове" +
            "ршенно чужеродной сущности - созданиям, у которых обычно нет жрецов. Куда чаще их взаимоотношения похожи" +
            " на отношения мастера и ученика. Знания колдуна и его сила растут по мере оказания услуг покровителю. Ма" +
            "гия, которой наделён колдун, может вносить незначительные изменения в его сущность (например способность" +
            " видеть в теммноте или читать на любом языке), а также дарует возможность пользоваться мощными заклинани" +
            "ями. В отличии от начитанных волшебников, колдуны могут дополнять магию некоторыми элементами рукопашног" +
            "о боя. Они хорошо себя чувствуют в лёгком доспехе, и знают как пользоваться простым оружием. Колдунами у" +
            "правляет ненасытная жажда знаний и власти, это вынуждает их заключать договоры и определяет их будущую ж" +
            "изнь. Истории о колдунах, связавших себя с исчадиями, широко известны. Но не все покровители колдунов - " +
            "демонические сущности. Иногда путешественник находит в дебрях леса красивую башню, встречает её хозяина " +
            "или хозяйку - фею, и оказывается втянутым в договор, не получив должной информации. А иногда, углубившис" +
            "ь в толстые тома книг с запрещёнными знаниями, ученик открывает свой ум - блестящий, но сумасшедший, реа" +
            "льности, находящейся за пределами материального мира в пустоте, в которой таятся чужеродные создания. Ка" +
            "к только договор заключён, жажда колдуна к знаниям и власти не может быть утолена обычной учёбой и иссле" +
            "дованиями. Никто не заключает договор с могущественным покровителем без намерения использовать полученну" +
            "ю силу. Подавляющее большинство колдунов проводит свои дни в погоне за своими собственными целями. Как п" +
            "равило, это разного рода приключения. Кроме того, требования покровителей ведут колунов навстречу приклю" +
            "чениям.\n";
        char [] discr = text_warlock.toCharArray();
        for (int i = 0; i < discr.length; i ++)
            if ((i > 1) && (i % 160 == 0))
                System.out.print(discr[i] + "\n");
            else
                System.out.print(discr[i]);
    }
    static void Warlock_Ability()
    {
        Random rand = new Random();
        System.out.println("\nВладение:\nДоспехи: Лёгкие доспехи.\nОружие: Простое оружие.\nИнструменты: Нет.\n" +
                "Спасброски: Мудрость, Харизма.");
        int warlock_skill_1 = rand.nextInt(7),
            warlock_skill_2 = rand.nextInt(7),
            warlock_flag = 1;
        while (warlock_flag == 1)
        {
            if (warlock_skill_1 == warlock_skill_2)
            {
                warlock_skill_1 = rand.nextInt(7);
                warlock_flag = 1;
            }
            else
                warlock_flag = 0;
        }
        String [] warlock_skills = {"Анализ","Запугивание","История","Магия","Обман","Природа","Религия"};
        System.out.println("\nНавыки: " + warlock_skills[warlock_skill_1] + ", " +
                warlock_skills[warlock_skill_2] + ".");
        Create_Unit unit_warlock = new Create_Unit();
        int warlock_item_1_choice = rand.nextInt(2),
            warlock_item_2_choice = rand.nextInt(2),
            warlock_item_3_choice = rand.nextInt(2);
        String [] warlock_item_1 = {"Лёгкий арбалет и 20 болтов к нему.",unit_warlock.Simple_Weapons
                ("full")},
                  warlock_item_2 = {"Мешочек с компонентами.","Магическая фокусировка."},
                  warlock_item_3 = {"Набор учёного.","Набор исследователя подземелий."};
        System.out.println("\nСнаряжение:\n1) " + warlock_item_1[warlock_item_1_choice] + "\n2) " +
                warlock_item_2[warlock_item_2_choice] + "\n3) " + warlock_item_3[warlock_item_3_choice] +
                "\n4) Кожаный доспех, любое простое оружие и два кинжала.");
    }
    int hit_dice_warlock = 8;
}
class Wizard //+++++++++++++++++++++++++++=-> класс Волшебник <-=+++++++++++++++++++++++++++++++++++++++++++++++++++++++
{
    static void class_Wizard()
    {
        String text_wizard = "Описание: Дикая и загадочная, разнообразная по форме и функциям, магия привлекает учени" +
            "ков, которые стремятся достич мастерства в её тайнах. Некоторые хотят уподобиться богам, изменять саму р" +
            "еальность. И хотя для сотворения обычного заклинания требуется лишь произношение нескольких странных сло" +
            "в, совершение пары мимолётных жестов, а иногда щепотка или комок экзотических материалов, эти поверхност" +
            "ные проявления не могут показать опыт, достигнутый долгими часами ученичествва и бессчётными часами иссл" +
            "едований. Волшебники живут и умирают со своими заклинаниями. Всё остальное вторично. Они учат новые закл" +
            "инания, экспериментируя и становясь опытнее. Они также могут узнать их от других волшебников, из древних" +
            " томов или свитков, и от древних существ (таких как феи), которые погружены в магию. Жизнь волшебников р" +
            "едко бывает обыденной. Наиболее близки к простой жизни, вероятно, те из волшебников, которые работают зн" +
            "атоками или лекторами в библиотеке университета, обучая других секретам мультивселенной. Другие волшебни" +
            "ки предлагают свои услуги в качестве прорицателей, служат в вооружённых силах, или проводят жизнь в прес" +
            "туплениях и стремлении к власти. Но соблазн знаний и силы зовёт даже самых обделённых смелостью волшебни" +
            "ков из безопасности их библиотек и лабораторий в разрушенные руины и потерянные города. Большинство волш" +
            "ебников считает, что их коллеги из древних цивилизаций знали секреты магии, которые были потеряны навек," +
            " и открывшие эти секреты смогут владеть силами, недоступными в нынешнемм веке.\n";
        char [] discr = text_wizard.toCharArray();
        for (int i = 0; i < discr.length; i ++)
            if ((i > 1) && (i % 160 == 0))
                System.out.print(discr[i] + "\n");
            else
                System.out.print(discr[i]);
    }
    static void Wizard_Ability()
    {
        Random rand = new Random();
        System.out.println("\nВладение:\nДоспехи: Нет.\nОружие: Кинжалы, дротики, пращи, боевые посохи, " +
                "лёгкие арбалеты.\nИнтсрументы: Нет.\nСпасброски: Интеллект, Мудрость.");
        int wizard_skill_1 = rand.nextInt(6),
            wizard_skill_2 = rand.nextInt(6),
            wizard_flag = 1;
        while (wizard_flag == 1)
        {
            if (wizard_skill_1 == wizard_skill_2)
            {
                wizard_skill_1 = rand.nextInt(6);
                wizard_flag = 1;
            }
            else
                wizard_flag = 0;
        }
        String [] wizard_skills = {"Анализ","История","Магия","Медицина","Проницательность","Религия"};
        System.out.println("\nНавыки: " + wizard_skills[wizard_skill_1] + ", " + wizard_skills[wizard_skill_2] + ".");
        int wizard_item_1_choice = rand.nextInt(2),
            wizard_item_2_choice = rand.nextInt(2),
            wizard_item_3_choice = rand.nextInt(2);
        String [] wizard_item_1 = {"Боевой посох.","Кинжал."},
                  wizard_item_2 = {"Мешочек с компонентами.","Магическая фокусировка."},
                  wizard_item_3 = {"Набор учёного.","Набор путешественника."};
        System.out.println("\nСнаряжение:\n1) " + wizard_item_1[wizard_item_1_choice] + "\n2) " +
                wizard_item_2[wizard_item_2_choice] + "\n3) " + wizard_item_3[wizard_item_3_choice] +
                "\n4) Книга заклинаний.");
    }
    int hit_dice_wizard = 6;
}
//------------------------------------------>  MAIN  <------------------------------------------------------------------
public class main
{
    static void Character(int gender, int race, int clas)
    {
        String gend = " ";
        Create_Unit unit = new Create_Unit();
        if (gender == 1)
            gend = "Мужской";
        else
            gend = "Женский";
        System.out.println("\nВаш новый персонаж: \nРаса: " + unit.Unit_Race(race));
        switch (race)
        {
            case 1:
                Dwarf dwarf_unit = new Dwarf();
                dwarf_unit.Discription_Dwarf();
                dwarf_unit.Name_Person(gend);
                break;
            case 2:
                Elf elf_unit = new Elf();
                elf_unit.Discription_Elf();
                elf_unit.Name_Person(gend);
                break;
            case 3:
                Halfling hulfling_unit = new Halfling();
                hulfling_unit.Discription_Halfling();
                hulfling_unit.Name_Person(gend);
                break;
            case 4:
                Human human_unit = new Human();
                human_unit.Discription_Human();
                human_unit.Name_Person(gend);
                break;
            case 5:
                Dragonborn dragonborn_unit = new Dragonborn();
                dragonborn_unit.Discription_Dragonborn ();
                dragonborn_unit.Name_Person(gend);
                break;
            case 6:
                Gnome gnome_unit = new Gnome();
                gnome_unit.Discription_Gnome();
                gnome_unit.Name_person(gend);
                break;
            case 7:
                Random rand = new Random();
                HalfElf halfelf_unit = new HalfElf();
                int half_elf_choice = (rand.nextInt(2) + 1);
                if (half_elf_choice == 1)
                {
                    Human half_elf_unit = new Human();
                    halfelf_unit.Discription_HalfElf();
                    half_elf_unit.Name_Person(gend);
                    break;
                }
                else
                {
                    Elf half_elf_unit = new Elf();
                    halfelf_unit.Discription_HalfElf();
                    half_elf_unit.Name_Person(gend);
                    break;
                }
            case 8:
                HalfOrk hulfOrk_unit = new HalfOrk();
                hulfOrk_unit.Discription_HalfOrk();
                hulfOrk_unit.Name_Person(gend);
                break;
            case 9:
                Tifling tifling_unit = new Tifling();
                tifling_unit.Discription_Tifling();
                tifling_unit.Name_Percon(gend);
                break;
        }
        System.out.println("Пол: " + unit.Unit_Gender(gender));
        System.out.println("Класс: " + unit.Unit_Class(clas));
        switch (clas)
        {
            case 1:
                Barbarian barbarian_unit = new Barbarian();
                barbarian_unit.class_Barbarian();
                barbarian_unit.Barbarian_Ability();
                break;
            case 2:
                Bard bard_unit = new Bard();
                bard_unit.class_Bard();
                bard_unit.Bard_Ability();
                break;
            case 3:
                Priest priest_unit = new Priest();
                priest_unit.class_Priest();
                priest_unit.Priest_Ability();
                break;
            case 4:
                Druid druid_unit = new Druid();
                druid_unit.class_Druid();
                druid_unit.Druid_Ability();
                break;
            case 5:
                Warrior warrior_unit = new Warrior();
                warrior_unit.class_Warrior();
                warrior_unit.Warrior_Ability();
                break;
            case 6:
                Monk monk_unit = new Monk();
                monk_unit.class_Monk();
                monk_unit.Monk_Ability();
                break;
            case 7:
                Paladin paladin_unit = new Paladin();
                paladin_unit.class_Paladin();
                paladin_unit.Paladin_Ability();
                break;
            case 8:
                Ranger ranger_unit = new Ranger();
                ranger_unit.class_Ranger();
                ranger_unit.Ranger_Ability();
                break;
            case 9:
                Rogue rogue_unit = new Rogue();
                rogue_unit.class_Rogue();
                rogue_unit.Rogue_Ability();
                break;
            case 10:
                Sorcerer sorcerer_unit = new Sorcerer();
                sorcerer_unit.class_Sorcerer();
                sorcerer_unit.Sorcerer_Ability();
                break;
            case 11:
                Warlock warlock_unit = new Warlock();
                warlock_unit.class_Warlock();
                warlock_unit.Warlock_Ability();
                break;
            case 12:
                Wizard wizard_unit = new Wizard();
                wizard_unit.class_Wizard();
                wizard_unit.Wizard_Ability();
                break;
        }
    }
    public static void main (String [] args) throws InterruptedException
    {
        int count = 1,  race = 0, clas = 0, gender = 0;
        while (count > 0)// цикл, который в случае ввода недопустимого значения, возвращает первый вопрос.
        {
            System.out.println("\u001B[36m" + "Добро пожаловать в программу генерирования персонажа, для игры в D&D.");
            System.out.print("Выберете режим создания вашего персонажа: \n1 - Автоматический. \n2 - Полуавтоматичес" +
                    "кий. \n--> " + "\u001B[0m");
            Scanner key = new Scanner(System.in);
            int mode = key.nextInt();
            /*char [] error = {'0','3','4','5','6','7','8','9','A','a','B','b','C','c','D','d','E','e','F','f','G','g','J','j',
                    'K','k','L','l','M','m','N','n','O','o','P','p','Q','q','R','r','S','s','T','t','U','u','V','v','W','W',
                    'X','x','Y','y','Z','z'};
            for (int i = 0; i < 66; i++)
            {
                if (mode == error[i])
                {
                    System.out.println("\u001B[31m\n" + "Ошибка! Введите пожалуйста корректные значения.\n" + "\u001B[0m");
                    break;
                }
                else
                {*/
                    if (mode == 1)
                    {
                        System.out.println("\u001B[33m\n" + "--> Вы выбрали автоматический режим создания персонажа." +
                                "\u001B[0m");
                        count = 0;
                    }
                    else if (mode == 2)
                    {
                        System.out.println("\u001B[33m\n" + "--> Вы выбрали ручной режим создания персонажа." +
                                "\u001B[0m");
                        count = (-1);
                    }
                    else
                        System.out.println("\u001B[31m\n" + "Ошибка! Введите пожалуйста корректные значения.\n" +
                                "\u001B[0m");
                }
           // }
       // }
//+++++++++++++++++++++++++=-> автоматическое создание основы пресонажа <-=+++++++++++++++++++++++++++++++++++++++++++++
        if (count == 0)
        {
//+++++++++++++++++++++++++=-> визуальное отображение "размышлений" компьютера при автоматическом создании персонажа.+++
            System.out.print("Идёт создание персонажа:");
            Random rand = new Random();
            int pixel = (rand.nextInt(5) + 3);
            for (int i = 0; i < pixel; i++)
            {
                System.out.print(".");
                Thread.sleep(1000);
            }
//----------------------------------------------------------------------------------------------------------------------
            int rand_gender = (rand.nextInt(2) + 1);
            int rand_race = (rand.nextInt(9) + 1);
            int rand_class = (rand.nextInt(12) + 1);
            Character(rand_gender, rand_race, rand_class);
            System.out.println(" ");
        }
//+++++++++++++++++++++++++=-> ручное создание пресонажа <-=++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        else
        {
            System.out.print("Выберите пол персонажа: \n1. Мужской \n2. Женский \n--> ");
            Scanner key_1 = new Scanner(System.in);
            gender = key_1.nextInt();
            System.out.print("Выберете расу: ");
            System.out.print("\n1. Дварф\n2. Эльф\n3. Полурослик\n4. Человек\n5. Драконорожденный\n6. Гном\n7. Полуэл" +
                    "ьф \n8. Полуорк\n9. Тифлинг \n--> ");
            Scanner key_2 = new Scanner(System.in);
            race = key_2.nextInt();
            System.out.print("Выберете класс: ");
            System.out.print("\n1. Варвар\n2. Бард\n3. Жрец\n4. Друид\n5. Воин\n6. Монах\n7. Паладин\n8. Следопыт \n9" +
                    ". Плут\n10. Чародей\n11. Колдун\n12.Волшебник\n--> ");
            Scanner key_3 = new Scanner(System.in);
            clas = key_3.nextInt();
            Character(gender, race, clas);
            System.out.println(" ");
        }
    }
}